/* Do not modify this file by hand.
 *
 * It is automatically generated by src/api_wrappers/generateJavaAPIWrappers.py.
 * (Run make api_wrappers to update it.)
 */

package com.dnanexus;

import com.dnanexus.DXHTTPRequest;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * Low-level wrappers for invoking DNAnexus API methods.
 */
public class DXAPI {

    private static ObjectMapper mapper = new ObjectMapper();


    /**
     * Invokes the analysisDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode analysisDescribe(String objectId) throws Exception {
        return analysisDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the analysisDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode analysisDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the analysisTerminate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode analysisTerminate(String objectId) throws Exception {
        return analysisTerminate(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the analysisTerminate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode analysisTerminate(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "terminate", inputParams);
    }

    /**
     * Invokes the appAddAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appAddAuthorizedUsers(String objectId) throws Exception {
        return appAddAuthorizedUsers(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appAddAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appAddAuthorizedUsers(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addAuthorizedUsers", inputParams);
    }

    /**
     * Invokes the appAddCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appAddCategories(String objectId) throws Exception {
        return appAddCategories(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appAddCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appAddCategories(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addCategories", inputParams);
    }

    /**
     * Invokes the appAddDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appAddDevelopers(String objectId) throws Exception {
        return appAddDevelopers(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appAddDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appAddDevelopers(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addDevelopers", inputParams);
    }

    /**
     * Invokes the appAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appAddTags(String objectId) throws Exception {
        return appAddTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appAddTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams);
    }

    /**
     * Invokes the appDelete method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appDelete(String objectId) throws Exception {
        return appDelete(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appDelete method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appDelete(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "delete", inputParams);
    }

    /**
     * Invokes the appDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appDescribe(String objectId) throws Exception {
        return appDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the appGet method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appGet(String objectId) throws Exception {
        return appGet(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appGet method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appGet(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "get", inputParams);
    }

    /**
     * Invokes the appInstall method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appInstall(String objectId) throws Exception {
        return appInstall(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appInstall method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appInstall(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "install", inputParams);
    }

    /**
     * Invokes the appListAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appListAuthorizedUsers(String objectId) throws Exception {
        return appListAuthorizedUsers(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appListAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appListAuthorizedUsers(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listAuthorizedUsers", inputParams);
    }

    /**
     * Invokes the appListCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appListCategories(String objectId) throws Exception {
        return appListCategories(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appListCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appListCategories(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listCategories", inputParams);
    }

    /**
     * Invokes the appListDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appListDevelopers(String objectId) throws Exception {
        return appListDevelopers(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appListDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appListDevelopers(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listDevelopers", inputParams);
    }

    /**
     * Invokes the appPublish method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appPublish(String objectId) throws Exception {
        return appPublish(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appPublish method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appPublish(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "publish", inputParams);
    }

    /**
     * Invokes the appRemoveAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appRemoveAuthorizedUsers(String objectId) throws Exception {
        return appRemoveAuthorizedUsers(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appRemoveAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appRemoveAuthorizedUsers(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeAuthorizedUsers", inputParams);
    }

    /**
     * Invokes the appRemoveCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appRemoveCategories(String objectId) throws Exception {
        return appRemoveCategories(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appRemoveCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appRemoveCategories(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeCategories", inputParams);
    }

    /**
     * Invokes the appRemoveDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appRemoveDevelopers(String objectId) throws Exception {
        return appRemoveDevelopers(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appRemoveDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appRemoveDevelopers(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeDevelopers", inputParams);
    }

    /**
     * Invokes the appRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appRemoveTags(String objectId) throws Exception {
        return appRemoveTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appRemoveTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams);
    }

    /**
     * Invokes the appRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appRun(String objectId) throws Exception {
        return appRun(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appRun(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "run", inputParams);
    }

    /**
     * Invokes the appUninstall method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appUninstall(String objectId) throws Exception {
        return appUninstall(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appUninstall method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appUninstall(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "uninstall", inputParams);
    }

    /**
     * Invokes the appUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appUpdate(String objectId) throws Exception {
        return appUpdate(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appUpdate(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams);
    }

    /**
     * Invokes the appNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     */
    public static JsonNode appNew() throws Exception {
        return appNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the appNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/app/new", inputParams);
    }

    /**
     * Invokes the appletAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletAddTags(String objectId) throws Exception {
        return appletAddTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletAddTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams);
    }

    /**
     * Invokes the appletDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletDescribe(String objectId) throws Exception {
        return appletDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the appletGet method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletGet(String objectId) throws Exception {
        return appletGet(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletGet method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletGet(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "get", inputParams);
    }

    /**
     * Invokes the appletGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletGetDetails(String objectId) throws Exception {
        return appletGetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletGetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams);
    }

    /**
     * Invokes the appletListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletListProjects(String objectId) throws Exception {
        return appletListProjects(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletListProjects(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams);
    }

    /**
     * Invokes the appletRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletRemoveTags(String objectId) throws Exception {
        return appletRemoveTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletRemoveTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams);
    }

    /**
     * Invokes the appletRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletRename(String objectId) throws Exception {
        return appletRename(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletRename(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams);
    }

    /**
     * Invokes the appletRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletRun(String objectId) throws Exception {
        return appletRun(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletRun(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "run", inputParams);
    }

    /**
     * Invokes the appletSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode appletSetProperties(String objectId) throws Exception {
        return appletSetProperties(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the appletSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletSetProperties(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams);
    }

    /**
     * Invokes the appletNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     */
    public static JsonNode appletNew() throws Exception {
        return appletNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the appletNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode appletNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/applet/new", inputParams);
    }

    /**
     * Invokes the containerClone method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerClone(String objectId) throws Exception {
        return containerClone(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerClone method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerClone(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "clone", inputParams);
    }

    /**
     * Invokes the containerDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerDescribe(String objectId) throws Exception {
        return containerDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the containerDestroy method.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerDestroy(String objectId) throws Exception {
        return containerDestroy(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerDestroy method with the specified parameters.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerDestroy(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "destroy", inputParams);
    }

    /**
     * Invokes the containerListFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerListFolder(String objectId) throws Exception {
        return containerListFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerListFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerListFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listFolder", inputParams);
    }

    /**
     * Invokes the containerMove method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerMove(String objectId) throws Exception {
        return containerMove(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerMove method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerMove(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "move", inputParams);
    }

    /**
     * Invokes the containerNewFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerNewFolder(String objectId) throws Exception {
        return containerNewFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerNewFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerNewFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "newFolder", inputParams);
    }

    /**
     * Invokes the containerRemoveFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerRemoveFolder(String objectId) throws Exception {
        return containerRemoveFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerRemoveFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerRemoveFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeFolder", inputParams);
    }

    /**
     * Invokes the containerRemoveObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerRemoveObjects(String objectId) throws Exception {
        return containerRemoveObjects(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerRemoveObjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerRemoveObjects(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeObjects", inputParams);
    }

    /**
     * Invokes the containerRenameFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode containerRenameFolder(String objectId) throws Exception {
        return containerRenameFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the containerRenameFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode containerRenameFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "renameFolder", inputParams);
    }

    /**
     * Invokes the fileAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileAddTags(String objectId) throws Exception {
        return fileAddTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileAddTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams);
    }

    /**
     * Invokes the fileAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileAddTypes(String objectId) throws Exception {
        return fileAddTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileAddTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams);
    }

    /**
     * Invokes the fileClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileClose(String objectId) throws Exception {
        return fileClose(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileClose(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams);
    }

    /**
     * Invokes the fileDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileDescribe(String objectId) throws Exception {
        return fileDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the fileDownload method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileDownload(String objectId) throws Exception {
        return fileDownload(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileDownload method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileDownload(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "download", inputParams);
    }

    /**
     * Invokes the fileGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileGetDetails(String objectId) throws Exception {
        return fileGetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileGetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams);
    }

    /**
     * Invokes the fileListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileListProjects(String objectId) throws Exception {
        return fileListProjects(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileListProjects(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams);
    }

    /**
     * Invokes the fileRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileRemoveTags(String objectId) throws Exception {
        return fileRemoveTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileRemoveTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams);
    }

    /**
     * Invokes the fileRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileRemoveTypes(String objectId) throws Exception {
        return fileRemoveTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileRemoveTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams);
    }

    /**
     * Invokes the fileRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileRename(String objectId) throws Exception {
        return fileRename(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileRename(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams);
    }

    /**
     * Invokes the fileSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileSetDetails(String objectId) throws Exception {
        return fileSetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileSetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams);
    }

    /**
     * Invokes the fileSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileSetProperties(String objectId) throws Exception {
        return fileSetProperties(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileSetProperties(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams);
    }

    /**
     * Invokes the fileSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileSetVisibility(String objectId) throws Exception {
        return fileSetVisibility(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileSetVisibility(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams);
    }

    /**
     * Invokes the fileUpload method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode fileUpload(String objectId) throws Exception {
        return fileUpload(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the fileUpload method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileUpload(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "upload", inputParams);
    }

    /**
     * Invokes the fileNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     */
    public static JsonNode fileNew() throws Exception {
        return fileNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the fileNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode fileNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/file/new", inputParams);
    }

    /**
     * Invokes the gtableAddRows method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableAddRows(String objectId) throws Exception {
        return gtableAddRows(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableAddRows method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableAddRows(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addRows", inputParams);
    }

    /**
     * Invokes the gtableAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableAddTags(String objectId) throws Exception {
        return gtableAddTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableAddTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams);
    }

    /**
     * Invokes the gtableAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableAddTypes(String objectId) throws Exception {
        return gtableAddTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableAddTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams);
    }

    /**
     * Invokes the gtableClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableClose(String objectId) throws Exception {
        return gtableClose(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableClose(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams);
    }

    /**
     * Invokes the gtableDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableDescribe(String objectId) throws Exception {
        return gtableDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the gtableGet method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableGet(String objectId) throws Exception {
        return gtableGet(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableGet method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableGet(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "get", inputParams);
    }

    /**
     * Invokes the gtableGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableGetDetails(String objectId) throws Exception {
        return gtableGetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableGetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams);
    }

    /**
     * Invokes the gtableListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableListProjects(String objectId) throws Exception {
        return gtableListProjects(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableListProjects(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams);
    }

    /**
     * Invokes the gtableNextPart method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableNextPart(String objectId) throws Exception {
        return gtableNextPart(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableNextPart method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableNextPart(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "nextPart", inputParams);
    }

    /**
     * Invokes the gtableRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableRemoveTags(String objectId) throws Exception {
        return gtableRemoveTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableRemoveTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams);
    }

    /**
     * Invokes the gtableRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableRemoveTypes(String objectId) throws Exception {
        return gtableRemoveTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableRemoveTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams);
    }

    /**
     * Invokes the gtableRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableRename(String objectId) throws Exception {
        return gtableRename(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableRename(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams);
    }

    /**
     * Invokes the gtableSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableSetDetails(String objectId) throws Exception {
        return gtableSetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableSetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams);
    }

    /**
     * Invokes the gtableSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableSetProperties(String objectId) throws Exception {
        return gtableSetProperties(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableSetProperties(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams);
    }

    /**
     * Invokes the gtableSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode gtableSetVisibility(String objectId) throws Exception {
        return gtableSetVisibility(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableSetVisibility(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams);
    }

    /**
     * Invokes the gtableNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     */
    public static JsonNode gtableNew() throws Exception {
        return gtableNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the gtableNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode gtableNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/gtable/new", inputParams);
    }

    /**
     * Invokes the jobDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode jobDescribe(String objectId) throws Exception {
        return jobDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the jobDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode jobDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the jobStreamLog method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob-xxxx%2FstreamLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode jobStreamLog(String objectId) throws Exception {
        return jobStreamLog(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the jobStreamLog method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob-xxxx%2FstreamLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode jobStreamLog(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "streamLog", inputParams);
    }

    /**
     * Invokes the jobTerminate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode jobTerminate(String objectId) throws Exception {
        return jobTerminate(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the jobTerminate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode jobTerminate(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "terminate", inputParams);
    }

    /**
     * Invokes the jobNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     */
    public static JsonNode jobNew() throws Exception {
        return jobNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the jobNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets and Entry Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode jobNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/job/new", inputParams);
    }

    /**
     * Invokes the notificationsGet method.
     */
    public static JsonNode notificationsGet() throws Exception {
        return notificationsGet(mapper.readTree("{}"));
    }
    /**
     * Invokes the notificationsGet method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode notificationsGet(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/notifications/get", inputParams);
    }

    /**
     * Invokes the notificationsMarkRead method.
     */
    public static JsonNode notificationsMarkRead() throws Exception {
        return notificationsMarkRead(mapper.readTree("{}"));
    }
    /**
     * Invokes the notificationsMarkRead method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode notificationsMarkRead(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/notifications/markRead", inputParams);
    }

    /**
     * Invokes the projectAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectAddTags(String objectId) throws Exception {
        return projectAddTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectAddTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams);
    }

    /**
     * Invokes the projectClone method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectClone(String objectId) throws Exception {
        return projectClone(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectClone method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectClone(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "clone", inputParams);
    }

    /**
     * Invokes the projectDecreasePermissions method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectDecreasePermissions(String objectId) throws Exception {
        return projectDecreasePermissions(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectDecreasePermissions method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectDecreasePermissions(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "decreasePermissions", inputParams);
    }

    /**
     * Invokes the projectDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectDescribe(String objectId) throws Exception {
        return projectDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the projectDestroy method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectDestroy(String objectId) throws Exception {
        return projectDestroy(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectDestroy method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectDestroy(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "destroy", inputParams);
    }

    /**
     * Invokes the projectInvite method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Invitations and Join Requests#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectInvite(String objectId) throws Exception {
        return projectInvite(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectInvite method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Invitations and Join Requests#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectInvite(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "invite", inputParams);
    }

    /**
     * Invokes the projectLeave method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectLeave(String objectId) throws Exception {
        return projectLeave(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectLeave method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectLeave(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "leave", inputParams);
    }

    /**
     * Invokes the projectListFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectListFolder(String objectId) throws Exception {
        return projectListFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectListFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectListFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listFolder", inputParams);
    }

    /**
     * Invokes the projectMove method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectMove(String objectId) throws Exception {
        return projectMove(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectMove method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectMove(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "move", inputParams);
    }

    /**
     * Invokes the projectNewFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectNewFolder(String objectId) throws Exception {
        return projectNewFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectNewFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectNewFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "newFolder", inputParams);
    }

    /**
     * Invokes the projectRemoveFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectRemoveFolder(String objectId) throws Exception {
        return projectRemoveFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectRemoveFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectRemoveFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeFolder", inputParams);
    }

    /**
     * Invokes the projectRemoveObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectRemoveObjects(String objectId) throws Exception {
        return projectRemoveObjects(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectRemoveObjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectRemoveObjects(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeObjects", inputParams);
    }

    /**
     * Invokes the projectRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectRemoveTags(String objectId) throws Exception {
        return projectRemoveTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectRemoveTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams);
    }

    /**
     * Invokes the projectRenameFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectRenameFolder(String objectId) throws Exception {
        return projectRenameFolder(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectRenameFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectRenameFolder(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "renameFolder", inputParams);
    }

    /**
     * Invokes the projectSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectSetProperties(String objectId) throws Exception {
        return projectSetProperties(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectSetProperties(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams);
    }

    /**
     * Invokes the projectUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode projectUpdate(String objectId) throws Exception {
        return projectUpdate(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the projectUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectUpdate(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams);
    }

    /**
     * Invokes the projectNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     */
    public static JsonNode projectNew() throws Exception {
        return projectNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the projectNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode projectNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/project/new", inputParams);
    }

    /**
     * Invokes the recordAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordAddTags(String objectId) throws Exception {
        return recordAddTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordAddTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams);
    }

    /**
     * Invokes the recordAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordAddTypes(String objectId) throws Exception {
        return recordAddTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordAddTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams);
    }

    /**
     * Invokes the recordClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordClose(String objectId) throws Exception {
        return recordClose(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordClose(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams);
    }

    /**
     * Invokes the recordDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordDescribe(String objectId) throws Exception {
        return recordDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the recordGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordGetDetails(String objectId) throws Exception {
        return recordGetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordGetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams);
    }

    /**
     * Invokes the recordListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordListProjects(String objectId) throws Exception {
        return recordListProjects(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordListProjects(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams);
    }

    /**
     * Invokes the recordRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordRemoveTags(String objectId) throws Exception {
        return recordRemoveTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordRemoveTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams);
    }

    /**
     * Invokes the recordRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordRemoveTypes(String objectId) throws Exception {
        return recordRemoveTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordRemoveTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams);
    }

    /**
     * Invokes the recordRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordRename(String objectId) throws Exception {
        return recordRename(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordRename(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams);
    }

    /**
     * Invokes the recordSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordSetDetails(String objectId) throws Exception {
        return recordSetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordSetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams);
    }

    /**
     * Invokes the recordSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordSetProperties(String objectId) throws Exception {
        return recordSetProperties(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordSetProperties(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams);
    }

    /**
     * Invokes the recordSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode recordSetVisibility(String objectId) throws Exception {
        return recordSetVisibility(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the recordSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordSetVisibility(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams);
    }

    /**
     * Invokes the recordNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     */
    public static JsonNode recordNew() throws Exception {
        return recordNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the recordNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode recordNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/record/new", inputParams);
    }

    /**
     * Invokes the systemFindAffiliates method.
     */
    public static JsonNode systemFindAffiliates() throws Exception {
        return systemFindAffiliates(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindAffiliates method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindAffiliates(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findAffiliates", inputParams);
    }

    /**
     * Invokes the systemFindApps method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     */
    public static JsonNode systemFindApps() throws Exception {
        return systemFindApps(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindApps method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindApps(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findApps", inputParams);
    }

    /**
     * Invokes the systemFindDataObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     */
    public static JsonNode systemFindDataObjects() throws Exception {
        return systemFindDataObjects(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindDataObjects method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindDataObjects(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findDataObjects", inputParams);
    }

    /**
     * Invokes the systemFindExecutions method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     */
    public static JsonNode systemFindExecutions() throws Exception {
        return systemFindExecutions(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindExecutions method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindExecutions(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findExecutions", inputParams);
    }

    /**
     * Invokes the systemFindAnalyses method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     */
    public static JsonNode systemFindAnalyses() throws Exception {
        return systemFindAnalyses(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindAnalyses method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindAnalyses(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findAnalyses", inputParams);
    }

    /**
     * Invokes the systemFindJobs method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     */
    public static JsonNode systemFindJobs() throws Exception {
        return systemFindJobs(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindJobs method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindJobs(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findJobs", inputParams);
    }

    /**
     * Invokes the systemFindProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     */
    public static JsonNode systemFindProjects() throws Exception {
        return systemFindProjects(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindProjects method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindProjects(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findProjects", inputParams);
    }

    /**
     * Invokes the systemFindUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     */
    public static JsonNode systemFindUsers() throws Exception {
        return systemFindUsers(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindUsers method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindUsers(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findUsers", inputParams);
    }

    /**
     * Invokes the systemFindProjectMembers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     */
    public static JsonNode systemFindProjectMembers() throws Exception {
        return systemFindProjectMembers(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemFindProjectMembers method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemFindProjectMembers(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/findProjectMembers", inputParams);
    }

    /**
     * Invokes the systemGreet method.
     */
    public static JsonNode systemGreet() throws Exception {
        return systemGreet(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemGreet method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemGreet(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/greet", inputParams);
    }

    /**
     * Invokes the systemShortenURL method.
     */
    public static JsonNode systemShortenURL() throws Exception {
        return systemShortenURL(mapper.readTree("{}"));
    }
    /**
     * Invokes the systemShortenURL method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode systemShortenURL(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/system/shortenURL", inputParams);
    }

    /**
     * Invokes the userDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode userDescribe(String objectId) throws Exception {
        return userDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the userDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode userDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the userUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode userUpdate(String objectId) throws Exception {
        return userUpdate(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the userUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode userUpdate(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams);
    }

    /**
     * Invokes the workflowAddStage method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowAddStage(String objectId) throws Exception {
        return workflowAddStage(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowAddStage method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowAddStage(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addStage", inputParams);
    }

    /**
     * Invokes the workflowAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowAddTags(String objectId) throws Exception {
        return workflowAddTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowAddTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams);
    }

    /**
     * Invokes the workflowAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowAddTypes(String objectId) throws Exception {
        return workflowAddTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowAddTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams);
    }

    /**
     * Invokes the workflowClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowClose(String objectId) throws Exception {
        return workflowClose(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowClose(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams);
    }

    /**
     * Invokes the workflowDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowDescribe(String objectId) throws Exception {
        return workflowDescribe(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowDescribe(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams);
    }

    /**
     * Invokes the workflowGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowGetDetails(String objectId) throws Exception {
        return workflowGetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowGetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams);
    }

    /**
     * Invokes the workflowListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowListProjects(String objectId) throws Exception {
        return workflowListProjects(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowListProjects(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams);
    }

    /**
     * Invokes the workflowMoveStage method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowMoveStage(String objectId) throws Exception {
        return workflowMoveStage(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowMoveStage method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowMoveStage(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "moveStage", inputParams);
    }

    /**
     * Invokes the workflowRemoveStage method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowRemoveStage(String objectId) throws Exception {
        return workflowRemoveStage(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowRemoveStage method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowRemoveStage(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeStage", inputParams);
    }

    /**
     * Invokes the workflowRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowRemoveTags(String objectId) throws Exception {
        return workflowRemoveTags(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowRemoveTags(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams);
    }

    /**
     * Invokes the workflowRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowRemoveTypes(String objectId) throws Exception {
        return workflowRemoveTypes(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowRemoveTypes(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams);
    }

    /**
     * Invokes the workflowRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowRename(String objectId) throws Exception {
        return workflowRename(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowRename(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams);
    }

    /**
     * Invokes the workflowRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowRun(String objectId) throws Exception {
        return workflowRun(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowRun(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "run", inputParams);
    }

    /**
     * Invokes the workflowSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowSetDetails(String objectId) throws Exception {
        return workflowSetDetails(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowSetDetails(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams);
    }

    /**
     * Invokes the workflowSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowSetProperties(String objectId) throws Exception {
        return workflowSetProperties(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowSetProperties(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams);
    }

    /**
     * Invokes the workflowSetStageInputs method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowSetStageInputs(String objectId) throws Exception {
        return workflowSetStageInputs(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowSetStageInputs method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowSetStageInputs(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setStageInputs", inputParams);
    }

    /**
     * Invokes the workflowSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     */
    public static JsonNode workflowSetVisibility(String objectId) throws Exception {
        return workflowSetVisibility(objectId, mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowSetVisibility(String objectId, JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams);
    }

    /**
     * Invokes the workflowNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     */
    public static JsonNode workflowNew() throws Exception {
        return workflowNew(mapper.readTree("{}"));
    }
    /**
     * Invokes the workflowNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     */
    public static JsonNode workflowNew(JsonNode inputParams) throws Exception {
        return new DXHTTPRequest().request("/workflow/new", inputParams);
    }
}

