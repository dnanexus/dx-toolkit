/* Do not modify this file by hand.
 *
 * It is automatically generated by src/api_wrappers/generateJavaAPIWrappers.py.
 * (Run make api_wrappers to update it.)
 */

package com.dnanexus;

import com.dnanexus.DXHTTPRequest.RetryStrategy;
import com.dnanexus.exceptions.DXAPIException;
import com.dnanexus.exceptions.DXHTTPException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * Utility class containing low-level wrappers for invoking DNAnexus API methods.
 */
public final class DXAPI {

    // Utility class should not be instantiated
    private DXAPI() {
    }

    private static ObjectMapper mapper = new ObjectMapper();


    /**
     * Invokes the analysisAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisAddTags(String objectId, Class<T> outputClass) {
        return analysisAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the analysisAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the analysisAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return analysisAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the analysisAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the analysisAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisAddTags(String objectId) {
        return analysisAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the analysisAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the analysisAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisAddTags(String objectId, DXEnvironment env) {
        return analysisAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the analysisAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the analysisDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisDescribe(String objectId, Class<T> outputClass) {
        return analysisDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the analysisDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the analysisDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return analysisDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the analysisDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the analysisDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisDescribe(String objectId) {
        return analysisDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the analysisDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the analysisDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisDescribe(String objectId, DXEnvironment env) {
        return analysisDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the analysisDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the analysisRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisRemoveTags(String objectId, Class<T> outputClass) {
        return analysisRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the analysisRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the analysisRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return analysisRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the analysisRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the analysisRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisRemoveTags(String objectId) {
        return analysisRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the analysisRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the analysisRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisRemoveTags(String objectId, DXEnvironment env) {
        return analysisRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the analysisRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the analysisSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisSetProperties(String objectId, Class<T> outputClass) {
        return analysisSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the analysisSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the analysisSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return analysisSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the analysisSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the analysisSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisSetProperties(String objectId) {
        return analysisSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the analysisSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the analysisSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisSetProperties(String objectId, DXEnvironment env) {
        return analysisSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the analysisSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the analysisTerminate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisTerminate(String objectId, Class<T> outputClass) {
        return analysisTerminate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the analysisTerminate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisTerminate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "terminate",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the analysisTerminate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisTerminate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return analysisTerminate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the analysisTerminate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T analysisTerminate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "terminate",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the analysisTerminate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisTerminate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisTerminate(String objectId) {
        return analysisTerminate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the analysisTerminate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisTerminate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisTerminate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "terminate", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the analysisTerminate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisTerminate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisTerminate(String objectId, DXEnvironment env) {
        return analysisTerminate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the analysisTerminate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #analysisTerminate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode analysisTerminate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "terminate", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appAddAuthorizedUsers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddAuthorizedUsers(String objectId, Class<T> outputClass) {
        return appAddAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appAddAuthorizedUsers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addAuthorizedUsers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appAddAuthorizedUsers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddAuthorizedUsers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appAddAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appAddAuthorizedUsers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addAuthorizedUsers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appAddAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddAuthorizedUsers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddAuthorizedUsers(String objectId) {
        return appAddAuthorizedUsers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appAddAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddAuthorizedUsers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddAuthorizedUsers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appAddAuthorizedUsers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddAuthorizedUsers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddAuthorizedUsers(String objectId, DXEnvironment env) {
        return appAddAuthorizedUsers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appAddAuthorizedUsers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddAuthorizedUsers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddAuthorizedUsers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appAddCategories method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddCategories(String objectId, Class<T> outputClass) {
        return appAddCategories(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appAddCategories method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddCategories(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addCategories",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appAddCategories method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddCategories(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appAddCategories(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appAddCategories method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddCategories(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addCategories",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appAddCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddCategories(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddCategories(String objectId) {
        return appAddCategories(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appAddCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddCategories(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddCategories(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appAddCategories method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddCategories(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddCategories(String objectId, DXEnvironment env) {
        return appAddCategories(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appAddCategories method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddCategories(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddCategories(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appAddDevelopers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddDevelopers(String objectId, Class<T> outputClass) {
        return appAddDevelopers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appAddDevelopers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddDevelopers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addDevelopers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appAddDevelopers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddDevelopers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appAddDevelopers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appAddDevelopers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddDevelopers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addDevelopers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appAddDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddDevelopers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddDevelopers(String objectId) {
        return appAddDevelopers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appAddDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddDevelopers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddDevelopers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appAddDevelopers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddDevelopers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddDevelopers(String objectId, DXEnvironment env) {
        return appAddDevelopers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appAddDevelopers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddDevelopers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddDevelopers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddTags(String objectId, Class<T> outputClass) {
        return appAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddTags(String objectId) {
        return appAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddTags(String objectId, DXEnvironment env) {
        return appAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appDelete method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDelete(String objectId, Class<T> outputClass) {
        return appDelete(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appDelete method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDelete(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "delete",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appDelete method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDelete(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appDelete(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appDelete method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDelete(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "delete",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appDelete method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDelete(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDelete(String objectId) {
        return appDelete(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appDelete method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDelete(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDelete(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "delete", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appDelete method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDelete(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDelete(String objectId, DXEnvironment env) {
        return appDelete(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appDelete method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDelete(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDelete(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "delete", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDescribe(String objectId, Class<T> outputClass) {
        return appDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDescribe(String objectId) {
        return appDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDescribe(String objectId, DXEnvironment env) {
        return appDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appGet method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appGet(String objectId, Class<T> outputClass) {
        return appGet(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appGet method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appGet(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "get",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appGet method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appGet(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appGet(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appGet method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appGet(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "get",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appGet method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appGet(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appGet(String objectId) {
        return appGet(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appGet method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appGet(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appGet(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "get", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appGet method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appGet(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appGet(String objectId, DXEnvironment env) {
        return appGet(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appGet method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appGet(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appGet(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "get", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appInstall method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appInstall(String objectId, Class<T> outputClass) {
        return appInstall(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appInstall method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appInstall(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "install",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appInstall method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appInstall(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appInstall(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appInstall method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appInstall(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "install",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appInstall method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appInstall(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appInstall(String objectId) {
        return appInstall(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appInstall method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appInstall(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appInstall(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "install", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appInstall method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appInstall(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appInstall(String objectId, DXEnvironment env) {
        return appInstall(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appInstall method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appInstall(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appInstall(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "install", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appListAuthorizedUsers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListAuthorizedUsers(String objectId, Class<T> outputClass) {
        return appListAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appListAuthorizedUsers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listAuthorizedUsers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appListAuthorizedUsers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListAuthorizedUsers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appListAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appListAuthorizedUsers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listAuthorizedUsers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appListAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListAuthorizedUsers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListAuthorizedUsers(String objectId) {
        return appListAuthorizedUsers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appListAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListAuthorizedUsers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListAuthorizedUsers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appListAuthorizedUsers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListAuthorizedUsers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListAuthorizedUsers(String objectId, DXEnvironment env) {
        return appListAuthorizedUsers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appListAuthorizedUsers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListAuthorizedUsers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListAuthorizedUsers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appListCategories method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListCategories(String objectId, Class<T> outputClass) {
        return appListCategories(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appListCategories method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListCategories(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listCategories",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appListCategories method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListCategories(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appListCategories(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appListCategories method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListCategories(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listCategories",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appListCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListCategories(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListCategories(String objectId) {
        return appListCategories(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appListCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListCategories(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListCategories(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appListCategories method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListCategories(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListCategories(String objectId, DXEnvironment env) {
        return appListCategories(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appListCategories method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListCategories(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListCategories(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appListDevelopers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListDevelopers(String objectId, Class<T> outputClass) {
        return appListDevelopers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appListDevelopers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListDevelopers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listDevelopers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appListDevelopers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListDevelopers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appListDevelopers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appListDevelopers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appListDevelopers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listDevelopers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appListDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListDevelopers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListDevelopers(String objectId) {
        return appListDevelopers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appListDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListDevelopers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListDevelopers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appListDevelopers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListDevelopers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListDevelopers(String objectId, DXEnvironment env) {
        return appListDevelopers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appListDevelopers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appListDevelopers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appListDevelopers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appPublish method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appPublish(String objectId, Class<T> outputClass) {
        return appPublish(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appPublish method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appPublish(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "publish",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appPublish method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appPublish(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appPublish(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appPublish method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appPublish(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "publish",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appPublish method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appPublish(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appPublish(String objectId) {
        return appPublish(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appPublish method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appPublish(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appPublish(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "publish", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appPublish method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appPublish(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appPublish(String objectId, DXEnvironment env) {
        return appPublish(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appPublish method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appPublish(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appPublish(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "publish", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appRemoveAuthorizedUsers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveAuthorizedUsers(String objectId, Class<T> outputClass) {
        return appRemoveAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appRemoveAuthorizedUsers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeAuthorizedUsers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appRemoveAuthorizedUsers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveAuthorizedUsers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appRemoveAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appRemoveAuthorizedUsers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeAuthorizedUsers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appRemoveAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveAuthorizedUsers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveAuthorizedUsers(String objectId) {
        return appRemoveAuthorizedUsers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appRemoveAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveAuthorizedUsers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveAuthorizedUsers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appRemoveAuthorizedUsers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveAuthorizedUsers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveAuthorizedUsers(String objectId, DXEnvironment env) {
        return appRemoveAuthorizedUsers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appRemoveAuthorizedUsers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveAuthorizedUsers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveAuthorizedUsers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appRemoveCategories method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveCategories(String objectId, Class<T> outputClass) {
        return appRemoveCategories(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appRemoveCategories method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveCategories(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeCategories",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appRemoveCategories method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveCategories(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appRemoveCategories(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appRemoveCategories method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveCategories(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeCategories",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appRemoveCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveCategories(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveCategories(String objectId) {
        return appRemoveCategories(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appRemoveCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveCategories(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveCategories(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appRemoveCategories method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveCategories(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveCategories(String objectId, DXEnvironment env) {
        return appRemoveCategories(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appRemoveCategories method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveCategories(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveCategories(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appRemoveDevelopers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveDevelopers(String objectId, Class<T> outputClass) {
        return appRemoveDevelopers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appRemoveDevelopers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveDevelopers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeDevelopers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appRemoveDevelopers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveDevelopers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appRemoveDevelopers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appRemoveDevelopers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveDevelopers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeDevelopers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appRemoveDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveDevelopers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveDevelopers(String objectId) {
        return appRemoveDevelopers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appRemoveDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveDevelopers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveDevelopers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appRemoveDevelopers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveDevelopers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveDevelopers(String objectId, DXEnvironment env) {
        return appRemoveDevelopers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appRemoveDevelopers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveDevelopers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveDevelopers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveTags(String objectId, Class<T> outputClass) {
        return appRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveTags(String objectId) {
        return appRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveTags(String objectId, DXEnvironment env) {
        return appRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appRun method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRun(String objectId, Class<T> outputClass) {
        return appRun(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appRun method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRun(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "run",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appRun method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRun(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appRun(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appRun method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appRun(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "run",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRun(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRun(String objectId) {
        return appRun(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRun(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRun(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the appRun method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRun(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRun(String objectId, DXEnvironment env) {
        return appRun(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appRun method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appRun(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appRun(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the appValidateBatch method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appValidateBatch(String objectId, Class<T> outputClass) {
        return appValidateBatch(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appValidateBatch method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appValidateBatch(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "validateBatch",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appValidateBatch method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appValidateBatch(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appValidateBatch(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appValidateBatch method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appValidateBatch(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "validateBatch",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appValidateBatch method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appValidateBatch(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appValidateBatch(String objectId) {
        return appValidateBatch(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appValidateBatch method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appValidateBatch(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appValidateBatch(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "validateBatch", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appValidateBatch method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appValidateBatch(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appValidateBatch(String objectId, DXEnvironment env) {
        return appValidateBatch(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appValidateBatch method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appValidateBatch(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appValidateBatch(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "validateBatch", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appUninstall method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUninstall(String objectId, Class<T> outputClass) {
        return appUninstall(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appUninstall method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUninstall(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "uninstall",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appUninstall method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUninstall(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appUninstall(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appUninstall method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUninstall(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "uninstall",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appUninstall method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUninstall(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUninstall(String objectId) {
        return appUninstall(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appUninstall method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUninstall(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUninstall(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "uninstall", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appUninstall method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUninstall(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUninstall(String objectId, DXEnvironment env) {
        return appUninstall(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appUninstall method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUninstall(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUninstall(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "uninstall", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appUpdate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUpdate(String objectId, Class<T> outputClass) {
        return appUpdate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appUpdate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUpdate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "update",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appUpdate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUpdate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appUpdate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appUpdate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appUpdate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "update",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUpdate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUpdate(String objectId) {
        return appUpdate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUpdate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUpdate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appUpdate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUpdate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUpdate(String objectId, DXEnvironment env) {
        return appUpdate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appUpdate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appUpdate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appUpdate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appNew(Class<T> outputClass) {
        return appNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appNew(Class<T> outputClass, DXEnvironment env) {
        return appNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/app/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the appNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/app/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the appNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appNew() {
        return appNew(mapper.createObjectNode());
    }
    /**
     * Invokes the appNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/app/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the appNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appNew(DXEnvironment env) {
        return appNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/app/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the appletAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletAddTags(String objectId, Class<T> outputClass) {
        return appletAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletAddTags(String objectId) {
        return appletAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletAddTags(String objectId, DXEnvironment env) {
        return appletAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletDescribe(String objectId, Class<T> outputClass) {
        return appletDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletDescribe(String objectId) {
        return appletDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletDescribe(String objectId, DXEnvironment env) {
        return appletDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletGet method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGet(String objectId, Class<T> outputClass) {
        return appletGet(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletGet method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGet(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "get",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletGet method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGet(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletGet(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletGet method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGet(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "get",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletGet method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGet(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGet(String objectId) {
        return appletGet(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletGet method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGet(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGet(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "get", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletGet method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGet(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGet(String objectId, DXEnvironment env) {
        return appletGet(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletGet method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGet(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGet(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "get", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletGetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGetDetails(String objectId, Class<T> outputClass) {
        return appletGetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletGetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "getDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletGetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletGetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletGetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletGetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGetDetails(String objectId) {
        return appletGetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletGetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGetDetails(String objectId, DXEnvironment env) {
        return appletGetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletGetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletGetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletGetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletListProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletListProjects(String objectId, Class<T> outputClass) {
        return appletListProjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletListProjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletListProjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listProjects",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletListProjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletListProjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletListProjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletListProjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletListProjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletListProjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletListProjects(String objectId) {
        return appletListProjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletListProjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletListProjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletListProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletListProjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletListProjects(String objectId, DXEnvironment env) {
        return appletListProjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletListProjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletListProjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletListProjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRemoveTags(String objectId, Class<T> outputClass) {
        return appletRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRemoveTags(String objectId) {
        return appletRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRemoveTags(String objectId, DXEnvironment env) {
        return appletRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletRename method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRename(String objectId, Class<T> outputClass) {
        return appletRename(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletRename method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRename(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "rename",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletRename method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRename(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletRename(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletRename method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRename(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "rename",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRename(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRename(String objectId) {
        return appletRename(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRename(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRename(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletRename method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRename(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRename(String objectId, DXEnvironment env) {
        return appletRename(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletRename method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRename(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRename(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletValidateBatch method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletValidateBatch(String objectId, Class<T> outputClass) {
        return appletValidateBatch(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletValidateBatch method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletValidateBatch(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "validateBatch",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletValidateBatch method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletValidateBatch(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletValidateBatch(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletValidateBatch method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletValidateBatch(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "validateBatch",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletValidateBatch method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletValidateBatch(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletValidateBatch(String objectId) {
        return appletValidateBatch(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletValidateBatch method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletValidateBatch(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletValidateBatch(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "validateBatch", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletValidateBatch method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletValidateBatch(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletValidateBatch(String objectId, DXEnvironment env) {
        return appletValidateBatch(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletValidateBatch method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletValidateBatch(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletValidateBatch(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "validateBatch", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletRun method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRun(String objectId, Class<T> outputClass) {
        return appletRun(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletRun method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRun(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "run",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletRun method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRun(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletRun(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletRun method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletRun(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "run",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRun(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRun(String objectId) {
        return appletRun(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRun(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRun(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the appletRun method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRun(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRun(String objectId, DXEnvironment env) {
        return appletRun(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletRun method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletRun(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletRun(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the appletSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletSetProperties(String objectId, Class<T> outputClass) {
        return appletSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the appletSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return appletSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the appletSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletSetProperties(String objectId) {
        return appletSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the appletSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the appletSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletSetProperties(String objectId, DXEnvironment env) {
        return appletSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the appletNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletNew(Class<T> outputClass) {
        return appletNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the appletNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletNew(Class<T> outputClass, DXEnvironment env) {
        return appletNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the appletNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/applet/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the appletNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T appletNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/applet/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the appletNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletNew() {
        return appletNew(mapper.createObjectNode());
    }
    /**
     * Invokes the appletNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/applet/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the appletNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletNew(DXEnvironment env) {
        return appletNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the appletNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #appletNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode appletNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/applet/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the containerClone method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerClone(String objectId, Class<T> outputClass) {
        return containerClone(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerClone method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerClone(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "clone",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerClone method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerClone(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerClone(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerClone method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerClone(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "clone",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerClone method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerClone(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerClone(String objectId) {
        return containerClone(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerClone method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerClone(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerClone(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "clone", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the containerClone method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerClone(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerClone(String objectId, DXEnvironment env) {
        return containerClone(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerClone method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerClone(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerClone(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "clone", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the containerDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDescribe(String objectId, Class<T> outputClass) {
        return containerDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDescribe(String objectId) {
        return containerDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the containerDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDescribe(String objectId, DXEnvironment env) {
        return containerDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the containerDestroy method with an empty input, deserializing to an object of the specified class.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDestroy(String objectId, Class<T> outputClass) {
        return containerDestroy(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerDestroy method with the given input, deserializing to an object of the specified class.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDestroy(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "destroy",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerDestroy method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDestroy(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerDestroy(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerDestroy method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerDestroy(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "destroy",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerDestroy method.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDestroy(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDestroy(String objectId) {
        return containerDestroy(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerDestroy method with the specified parameters.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDestroy(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDestroy(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "destroy", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the containerDestroy method with the specified environment.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDestroy(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDestroy(String objectId, DXEnvironment env) {
        return containerDestroy(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerDestroy method with the specified environment and parameters.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerDestroy(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerDestroy(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "destroy", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the containerListFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerListFolder(String objectId, Class<T> outputClass) {
        return containerListFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerListFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerListFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listFolder",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerListFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerListFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerListFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerListFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerListFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listFolder",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerListFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerListFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerListFolder(String objectId) {
        return containerListFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerListFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerListFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerListFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the containerListFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerListFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerListFolder(String objectId, DXEnvironment env) {
        return containerListFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerListFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerListFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerListFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the containerMove method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerMove(String objectId, Class<T> outputClass) {
        return containerMove(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerMove method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerMove(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "move",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerMove method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerMove(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerMove(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerMove method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerMove(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "move",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerMove method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerMove(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerMove(String objectId) {
        return containerMove(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerMove method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerMove(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerMove(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "move", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the containerMove method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerMove(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerMove(String objectId, DXEnvironment env) {
        return containerMove(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerMove method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerMove(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerMove(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "move", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the containerNewFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerNewFolder(String objectId, Class<T> outputClass) {
        return containerNewFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerNewFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerNewFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "newFolder",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerNewFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerNewFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerNewFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerNewFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerNewFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "newFolder",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerNewFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerNewFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerNewFolder(String objectId) {
        return containerNewFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerNewFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerNewFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerNewFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "newFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the containerNewFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerNewFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerNewFolder(String objectId, DXEnvironment env) {
        return containerNewFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerNewFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerNewFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerNewFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "newFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the containerRemoveFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveFolder(String objectId, Class<T> outputClass) {
        return containerRemoveFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerRemoveFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeFolder",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerRemoveFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerRemoveFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerRemoveFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeFolder",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerRemoveFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveFolder(String objectId) {
        return containerRemoveFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerRemoveFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the containerRemoveFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveFolder(String objectId, DXEnvironment env) {
        return containerRemoveFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerRemoveFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the containerRemoveObjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveObjects(String objectId, Class<T> outputClass) {
        return containerRemoveObjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerRemoveObjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveObjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeObjects",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerRemoveObjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveObjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerRemoveObjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerRemoveObjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRemoveObjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeObjects",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerRemoveObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveObjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveObjects(String objectId) {
        return containerRemoveObjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerRemoveObjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveObjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveObjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeObjects", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the containerRemoveObjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveObjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveObjects(String objectId, DXEnvironment env) {
        return containerRemoveObjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerRemoveObjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRemoveObjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRemoveObjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeObjects", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the containerRenameFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRenameFolder(String objectId, Class<T> outputClass) {
        return containerRenameFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the containerRenameFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRenameFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "renameFolder",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the containerRenameFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRenameFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return containerRenameFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the containerRenameFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T containerRenameFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "renameFolder",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the containerRenameFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRenameFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRenameFolder(String objectId) {
        return containerRenameFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the containerRenameFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRenameFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRenameFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "renameFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the containerRenameFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRenameFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRenameFolder(String objectId, DXEnvironment env) {
        return containerRenameFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the containerRenameFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #containerRenameFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode containerRenameFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "renameFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the fileAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTags(String objectId, Class<T> outputClass) {
        return fileAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTags(String objectId) {
        return fileAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTags(String objectId, DXEnvironment env) {
        return fileAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileAddTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTypes(String objectId, Class<T> outputClass) {
        return fileAddTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileAddTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileAddTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileAddTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileAddTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileAddTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTypes(String objectId) {
        return fileAddTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileAddTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTypes(String objectId, DXEnvironment env) {
        return fileAddTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileAddTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileAddTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileAddTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileClose method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileClose(String objectId, Class<T> outputClass) {
        return fileClose(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileClose method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileClose(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "close",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileClose method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileClose(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileClose(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileClose method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileClose(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "close",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileClose(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileClose(String objectId) {
        return fileClose(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileClose(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileClose(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileClose method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileClose(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileClose(String objectId, DXEnvironment env) {
        return fileClose(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileClose method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileClose(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileClose(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDescribe(String objectId, Class<T> outputClass) {
        return fileDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDescribe(String objectId) {
        return fileDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDescribe(String objectId, DXEnvironment env) {
        return fileDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileDownload method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDownload(String objectId, Class<T> outputClass) {
        return fileDownload(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileDownload method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDownload(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "download",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileDownload method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDownload(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileDownload(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileDownload method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileDownload(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "download",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileDownload method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDownload(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDownload(String objectId) {
        return fileDownload(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileDownload method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDownload(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDownload(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "download", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileDownload method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDownload(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDownload(String objectId, DXEnvironment env) {
        return fileDownload(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileDownload method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileDownload(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileDownload(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "download", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileGetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileGetDetails(String objectId, Class<T> outputClass) {
        return fileGetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileGetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileGetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "getDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileGetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileGetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileGetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileGetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileGetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileGetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileGetDetails(String objectId) {
        return fileGetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileGetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileGetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileGetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileGetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileGetDetails(String objectId, DXEnvironment env) {
        return fileGetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileGetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileGetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileGetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileListProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileListProjects(String objectId, Class<T> outputClass) {
        return fileListProjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileListProjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileListProjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listProjects",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileListProjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileListProjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileListProjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileListProjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileListProjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileListProjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileListProjects(String objectId) {
        return fileListProjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileListProjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileListProjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileListProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileListProjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileListProjects(String objectId, DXEnvironment env) {
        return fileListProjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileListProjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileListProjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileListProjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTags(String objectId, Class<T> outputClass) {
        return fileRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTags(String objectId) {
        return fileRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTags(String objectId, DXEnvironment env) {
        return fileRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileRemoveTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTypes(String objectId, Class<T> outputClass) {
        return fileRemoveTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileRemoveTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileRemoveTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileRemoveTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileRemoveTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRemoveTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTypes(String objectId) {
        return fileRemoveTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileRemoveTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTypes(String objectId, DXEnvironment env) {
        return fileRemoveTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileRemoveTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRemoveTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRemoveTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileRename method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRename(String objectId, Class<T> outputClass) {
        return fileRename(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileRename method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRename(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "rename",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileRename method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRename(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileRename(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileRename method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileRename(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "rename",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRename(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRename(String objectId) {
        return fileRename(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRename(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRename(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileRename method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRename(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRename(String objectId, DXEnvironment env) {
        return fileRename(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileRename method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileRename(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileRename(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileSetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetDetails(String objectId, Class<T> outputClass) {
        return fileSetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileSetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileSetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileSetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileSetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetDetails(String objectId) {
        return fileSetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileSetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetDetails(String objectId, DXEnvironment env) {
        return fileSetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileSetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetProperties(String objectId, Class<T> outputClass) {
        return fileSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetProperties(String objectId) {
        return fileSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetProperties(String objectId, DXEnvironment env) {
        return fileSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileSetVisibility method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetVisibility(String objectId, Class<T> outputClass) {
        return fileSetVisibility(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileSetVisibility method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetVisibility(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileSetVisibility method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetVisibility(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileSetVisibility(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileSetVisibility method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileSetVisibility(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetVisibility(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetVisibility(String objectId) {
        return fileSetVisibility(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetVisibility(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetVisibility(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileSetVisibility method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetVisibility(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetVisibility(String objectId, DXEnvironment env) {
        return fileSetVisibility(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileSetVisibility method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileSetVisibility(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileSetVisibility(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileUpload method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileUpload(String objectId, Class<T> outputClass) {
        return fileUpload(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileUpload method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileUpload(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "upload",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the fileUpload method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileUpload(String objectId, Class<T> outputClass, DXEnvironment env) {
        return fileUpload(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileUpload method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileUpload(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "upload",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the fileUpload method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileUpload(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileUpload(String objectId) {
        return fileUpload(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the fileUpload method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileUpload(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileUpload(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "upload", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the fileUpload method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileUpload(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileUpload(String objectId, DXEnvironment env) {
        return fileUpload(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileUpload method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileUpload(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileUpload(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "upload", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the fileNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileNew(Class<T> outputClass) {
        return fileNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the fileNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileNew(Class<T> outputClass, DXEnvironment env) {
        return fileNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the fileNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/file/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the fileNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T fileNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/file/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the fileNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileNew() {
        return fileNew(mapper.createObjectNode());
    }
    /**
     * Invokes the fileNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/file/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the fileNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileNew(DXEnvironment env) {
        return fileNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the fileNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #fileNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode fileNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/file/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddAuthorizedUsers(String objectId, Class<T> outputClass) {
        return globalWorkflowAddAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addAuthorizedUsers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddAuthorizedUsers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowAddAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addAuthorizedUsers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddAuthorizedUsers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddAuthorizedUsers(String objectId) {
        return globalWorkflowAddAuthorizedUsers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddAuthorizedUsers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddAuthorizedUsers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddAuthorizedUsers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddAuthorizedUsers(String objectId, DXEnvironment env) {
        return globalWorkflowAddAuthorizedUsers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowAddAuthorizedUsers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddAuthorizedUsers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddAuthorizedUsers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowAddCategories method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddCategories(String objectId, Class<T> outputClass) {
        return globalWorkflowAddCategories(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddCategories method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddCategories(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addCategories",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddCategories method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddCategories(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowAddCategories(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowAddCategories method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddCategories(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addCategories",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowAddCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddCategories(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddCategories(String objectId) {
        return globalWorkflowAddCategories(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowAddCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddCategories(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddCategories(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowAddCategories method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddCategories(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddCategories(String objectId, DXEnvironment env) {
        return globalWorkflowAddCategories(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowAddCategories method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddCategories(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddCategories(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowAddDevelopers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddDevelopers(String objectId, Class<T> outputClass) {
        return globalWorkflowAddDevelopers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddDevelopers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddDevelopers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addDevelopers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddDevelopers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddDevelopers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowAddDevelopers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowAddDevelopers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddDevelopers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addDevelopers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowAddDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddDevelopers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddDevelopers(String objectId) {
        return globalWorkflowAddDevelopers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowAddDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddDevelopers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddDevelopers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowAddDevelopers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddDevelopers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddDevelopers(String objectId, DXEnvironment env) {
        return globalWorkflowAddDevelopers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowAddDevelopers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddDevelopers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddDevelopers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddTags(String objectId, Class<T> outputClass) {
        return globalWorkflowAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddTags(String objectId) {
        return globalWorkflowAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddTags(String objectId, DXEnvironment env) {
        return globalWorkflowAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowDelete method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDelete(String objectId, Class<T> outputClass) {
        return globalWorkflowDelete(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowDelete method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDelete(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "delete",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowDelete method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDelete(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowDelete(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowDelete method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDelete(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "delete",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowDelete method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDelete(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDelete(String objectId) {
        return globalWorkflowDelete(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowDelete method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDelete(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDelete(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "delete", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowDelete method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDelete(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDelete(String objectId, DXEnvironment env) {
        return globalWorkflowDelete(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowDelete method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDelete(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDelete(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "delete", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDescribe(String objectId, Class<T> outputClass) {
        return globalWorkflowDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDescribe(String objectId) {
        return globalWorkflowDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDescribe(String objectId, DXEnvironment env) {
        return globalWorkflowDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowListAuthorizedUsers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListAuthorizedUsers(String objectId, Class<T> outputClass) {
        return globalWorkflowListAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowListAuthorizedUsers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listAuthorizedUsers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowListAuthorizedUsers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListAuthorizedUsers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowListAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowListAuthorizedUsers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listAuthorizedUsers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowListAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListAuthorizedUsers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListAuthorizedUsers(String objectId) {
        return globalWorkflowListAuthorizedUsers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowListAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListAuthorizedUsers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListAuthorizedUsers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowListAuthorizedUsers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListAuthorizedUsers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListAuthorizedUsers(String objectId, DXEnvironment env) {
        return globalWorkflowListAuthorizedUsers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowListAuthorizedUsers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListAuthorizedUsers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListAuthorizedUsers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowListCategories method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListCategories(String objectId, Class<T> outputClass) {
        return globalWorkflowListCategories(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowListCategories method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListCategories(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listCategories",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowListCategories method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListCategories(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowListCategories(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowListCategories method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListCategories(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listCategories",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowListCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListCategories(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListCategories(String objectId) {
        return globalWorkflowListCategories(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowListCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListCategories(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListCategories(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowListCategories method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListCategories(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListCategories(String objectId, DXEnvironment env) {
        return globalWorkflowListCategories(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowListCategories method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListCategories(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListCategories(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowListDevelopers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListDevelopers(String objectId, Class<T> outputClass) {
        return globalWorkflowListDevelopers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowListDevelopers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListDevelopers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listDevelopers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowListDevelopers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListDevelopers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowListDevelopers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowListDevelopers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowListDevelopers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listDevelopers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowListDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListDevelopers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListDevelopers(String objectId) {
        return globalWorkflowListDevelopers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowListDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListDevelopers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListDevelopers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowListDevelopers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListDevelopers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListDevelopers(String objectId, DXEnvironment env) {
        return globalWorkflowListDevelopers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowListDevelopers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowListDevelopers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowListDevelopers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowPublish method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowPublish(String objectId, Class<T> outputClass) {
        return globalWorkflowPublish(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowPublish method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowPublish(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "publish",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowPublish method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowPublish(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowPublish(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowPublish method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowPublish(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "publish",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowPublish method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowPublish(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowPublish(String objectId) {
        return globalWorkflowPublish(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowPublish method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowPublish(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowPublish(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "publish", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowPublish method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowPublish(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowPublish(String objectId, DXEnvironment env) {
        return globalWorkflowPublish(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowPublish method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowPublish(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowPublish(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "publish", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveAuthorizedUsers(String objectId, Class<T> outputClass) {
        return globalWorkflowRemoveAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeAuthorizedUsers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveAuthorizedUsers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowRemoveAuthorizedUsers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveAuthorizedUsers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeAuthorizedUsers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveAuthorizedUsers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveAuthorizedUsers(String objectId) {
        return globalWorkflowRemoveAuthorizedUsers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveAuthorizedUsers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveAuthorizedUsers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveAuthorizedUsers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveAuthorizedUsers(String objectId, DXEnvironment env) {
        return globalWorkflowRemoveAuthorizedUsers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowRemoveAuthorizedUsers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveAuthorizedUsers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveAuthorizedUsers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeAuthorizedUsers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowRemoveCategories method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveCategories(String objectId, Class<T> outputClass) {
        return globalWorkflowRemoveCategories(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveCategories method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveCategories(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeCategories",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveCategories method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveCategories(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowRemoveCategories(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowRemoveCategories method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveCategories(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeCategories",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowRemoveCategories method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveCategories(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveCategories(String objectId) {
        return globalWorkflowRemoveCategories(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowRemoveCategories method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveCategories(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveCategories(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowRemoveCategories method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveCategories(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveCategories(String objectId, DXEnvironment env) {
        return globalWorkflowRemoveCategories(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowRemoveCategories method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveCategories(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveCategories(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeCategories", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowRemoveDevelopers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveDevelopers(String objectId, Class<T> outputClass) {
        return globalWorkflowRemoveDevelopers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveDevelopers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveDevelopers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeDevelopers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveDevelopers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveDevelopers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowRemoveDevelopers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowRemoveDevelopers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveDevelopers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeDevelopers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowRemoveDevelopers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveDevelopers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveDevelopers(String objectId) {
        return globalWorkflowRemoveDevelopers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowRemoveDevelopers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveDevelopers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveDevelopers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowRemoveDevelopers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveDevelopers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveDevelopers(String objectId, DXEnvironment env) {
        return globalWorkflowRemoveDevelopers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowRemoveDevelopers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveDevelopers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveDevelopers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeDevelopers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveTags(String objectId, Class<T> outputClass) {
        return globalWorkflowRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveTags(String objectId) {
        return globalWorkflowRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveTags(String objectId, DXEnvironment env) {
        return globalWorkflowRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowRun method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRun(String objectId, Class<T> outputClass) {
        return globalWorkflowRun(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowRun method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRun(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "run",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowRun method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRun(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowRun(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowRun method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowRun(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "run",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRun(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRun(String objectId) {
        return globalWorkflowRun(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRun(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRun(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowRun method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRun(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRun(String objectId, DXEnvironment env) {
        return globalWorkflowRun(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowRun method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowRun(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowRun(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowUpdate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowUpdate(String objectId, Class<T> outputClass) {
        return globalWorkflowUpdate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowUpdate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowUpdate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "update",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the globalWorkflowUpdate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowUpdate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowUpdate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowUpdate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowUpdate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "update",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the globalWorkflowUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowUpdate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowUpdate(String objectId) {
        return globalWorkflowUpdate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowUpdate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowUpdate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowUpdate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowUpdate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowUpdate(String objectId, DXEnvironment env) {
        return globalWorkflowUpdate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowUpdate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowUpdate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowUpdate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the globalWorkflowNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowNew(Class<T> outputClass) {
        return globalWorkflowNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the globalWorkflowNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowNew(Class<T> outputClass, DXEnvironment env) {
        return globalWorkflowNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the globalWorkflowNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/globalworkflow/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the globalWorkflowNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T globalWorkflowNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/globalworkflow/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the globalWorkflowNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowNew() {
        return globalWorkflowNew(mapper.createObjectNode());
    }
    /**
     * Invokes the globalWorkflowNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/globalworkflow/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the globalWorkflowNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowNew(DXEnvironment env) {
        return globalWorkflowNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the globalWorkflowNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #globalWorkflowNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode globalWorkflowNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/globalworkflow/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableAddRows method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddRows(String objectId, Class<T> outputClass) {
        return gtableAddRows(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableAddRows method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddRows(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addRows",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableAddRows method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddRows(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableAddRows(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableAddRows method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddRows(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addRows",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableAddRows method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddRows(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddRows(String objectId) {
        return gtableAddRows(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableAddRows method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddRows(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddRows(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addRows", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableAddRows method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddRows(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddRows(String objectId, DXEnvironment env) {
        return gtableAddRows(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableAddRows method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddRows(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddRows(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addRows", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTags(String objectId, Class<T> outputClass) {
        return gtableAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTags(String objectId) {
        return gtableAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTags(String objectId, DXEnvironment env) {
        return gtableAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableAddTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTypes(String objectId, Class<T> outputClass) {
        return gtableAddTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableAddTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableAddTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableAddTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableAddTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableAddTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTypes(String objectId) {
        return gtableAddTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableAddTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTypes(String objectId, DXEnvironment env) {
        return gtableAddTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableAddTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableAddTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableAddTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableClose method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableClose(String objectId, Class<T> outputClass) {
        return gtableClose(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableClose method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableClose(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "close",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableClose method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableClose(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableClose(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableClose method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableClose(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "close",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableClose(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableClose(String objectId) {
        return gtableClose(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableClose(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableClose(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableClose method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableClose(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableClose(String objectId, DXEnvironment env) {
        return gtableClose(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableClose method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableClose(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableClose(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableDescribe(String objectId, Class<T> outputClass) {
        return gtableDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableDescribe(String objectId) {
        return gtableDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableDescribe(String objectId, DXEnvironment env) {
        return gtableDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableGet method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGet(String objectId, Class<T> outputClass) {
        return gtableGet(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableGet method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGet(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "get",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableGet method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGet(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableGet(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableGet method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGet(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "get",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableGet method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGet(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGet(String objectId) {
        return gtableGet(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableGet method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGet(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGet(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "get", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableGet method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGet(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGet(String objectId, DXEnvironment env) {
        return gtableGet(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableGet method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGet(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGet(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "get", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableGetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGetDetails(String objectId, Class<T> outputClass) {
        return gtableGetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableGetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "getDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableGetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableGetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableGetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableGetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGetDetails(String objectId) {
        return gtableGetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableGetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGetDetails(String objectId, DXEnvironment env) {
        return gtableGetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableGetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableGetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableGetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableListProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableListProjects(String objectId, Class<T> outputClass) {
        return gtableListProjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableListProjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableListProjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listProjects",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableListProjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableListProjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableListProjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableListProjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableListProjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableListProjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableListProjects(String objectId) {
        return gtableListProjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableListProjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableListProjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableListProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableListProjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableListProjects(String objectId, DXEnvironment env) {
        return gtableListProjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableListProjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableListProjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableListProjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableNextPart method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNextPart(String objectId, Class<T> outputClass) {
        return gtableNextPart(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableNextPart method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNextPart(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "nextPart",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableNextPart method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNextPart(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableNextPart(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableNextPart method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNextPart(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "nextPart",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableNextPart method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNextPart(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNextPart(String objectId) {
        return gtableNextPart(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableNextPart method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNextPart(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNextPart(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "nextPart", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableNextPart method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNextPart(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNextPart(String objectId, DXEnvironment env) {
        return gtableNextPart(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableNextPart method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNextPart(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNextPart(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "nextPart", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTags(String objectId, Class<T> outputClass) {
        return gtableRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTags(String objectId) {
        return gtableRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTags(String objectId, DXEnvironment env) {
        return gtableRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableRemoveTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTypes(String objectId, Class<T> outputClass) {
        return gtableRemoveTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableRemoveTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableRemoveTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableRemoveTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableRemoveTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRemoveTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTypes(String objectId) {
        return gtableRemoveTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableRemoveTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTypes(String objectId, DXEnvironment env) {
        return gtableRemoveTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableRemoveTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRemoveTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRemoveTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableRename method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRename(String objectId, Class<T> outputClass) {
        return gtableRename(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableRename method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRename(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "rename",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableRename method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRename(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableRename(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableRename method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableRename(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "rename",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRename(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRename(String objectId) {
        return gtableRename(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRename(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRename(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableRename method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRename(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRename(String objectId, DXEnvironment env) {
        return gtableRename(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableRename method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableRename(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableRename(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableSetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetDetails(String objectId, Class<T> outputClass) {
        return gtableSetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableSetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableSetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableSetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableSetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetDetails(String objectId) {
        return gtableSetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableSetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetDetails(String objectId, DXEnvironment env) {
        return gtableSetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableSetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetProperties(String objectId, Class<T> outputClass) {
        return gtableSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetProperties(String objectId) {
        return gtableSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetProperties(String objectId, DXEnvironment env) {
        return gtableSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableSetVisibility method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetVisibility(String objectId, Class<T> outputClass) {
        return gtableSetVisibility(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableSetVisibility method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetVisibility(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the gtableSetVisibility method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetVisibility(String objectId, Class<T> outputClass, DXEnvironment env) {
        return gtableSetVisibility(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableSetVisibility method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableSetVisibility(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the gtableSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetVisibility(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetVisibility(String objectId) {
        return gtableSetVisibility(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the gtableSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetVisibility(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetVisibility(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableSetVisibility method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetVisibility(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetVisibility(String objectId, DXEnvironment env) {
        return gtableSetVisibility(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableSetVisibility method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableSetVisibility(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableSetVisibility(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the gtableNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNew(Class<T> outputClass) {
        return gtableNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the gtableNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNew(Class<T> outputClass, DXEnvironment env) {
        return gtableNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the gtableNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/gtable/new", input, RetryStrategy.UNSAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the gtableNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T gtableNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/gtable/new", input, RetryStrategy.UNSAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the gtableNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNew() {
        return gtableNew(mapper.createObjectNode());
    }
    /**
     * Invokes the gtableNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/gtable/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the gtableNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNew(DXEnvironment env) {
        return gtableNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the gtableNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #gtableNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode gtableNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/gtable/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the jobAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobAddTags(String objectId, Class<T> outputClass) {
        return jobAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the jobAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the jobAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return jobAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the jobAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the jobAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobAddTags(String objectId) {
        return jobAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the jobAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the jobAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobAddTags(String objectId, DXEnvironment env) {
        return jobAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the jobAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the jobDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobDescribe(String objectId, Class<T> outputClass) {
        return jobDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the jobDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the jobDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return jobDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the jobDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the jobDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobDescribe(String objectId) {
        return jobDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the jobDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the jobDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobDescribe(String objectId, DXEnvironment env) {
        return jobDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the jobDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the jobGetLog method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobGetLog(String objectId, Class<T> outputClass) {
        return jobGetLog(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the jobGetLog method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobGetLog(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "getLog",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the jobGetLog method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobGetLog(String objectId, Class<T> outputClass, DXEnvironment env) {
        return jobGetLog(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the jobGetLog method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobGetLog(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "getLog",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the jobGetLog method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobGetLog(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobGetLog(String objectId) {
        return jobGetLog(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the jobGetLog method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobGetLog(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobGetLog(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getLog", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the jobGetLog method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobGetLog(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobGetLog(String objectId, DXEnvironment env) {
        return jobGetLog(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the jobGetLog method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobGetLog(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobGetLog(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "getLog", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the jobRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobRemoveTags(String objectId, Class<T> outputClass) {
        return jobRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the jobRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the jobRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return jobRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the jobRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the jobRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobRemoveTags(String objectId) {
        return jobRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the jobRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the jobRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobRemoveTags(String objectId, DXEnvironment env) {
        return jobRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the jobRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the jobSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobSetProperties(String objectId, Class<T> outputClass) {
        return jobSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the jobSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the jobSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return jobSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the jobSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the jobSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobSetProperties(String objectId) {
        return jobSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the jobSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the jobSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobSetProperties(String objectId, DXEnvironment env) {
        return jobSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the jobSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the jobTerminate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobTerminate(String objectId, Class<T> outputClass) {
        return jobTerminate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the jobTerminate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobTerminate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "terminate",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the jobTerminate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobTerminate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return jobTerminate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the jobTerminate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobTerminate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "terminate",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the jobTerminate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobTerminate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobTerminate(String objectId) {
        return jobTerminate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the jobTerminate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobTerminate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobTerminate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "terminate", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the jobTerminate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobTerminate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobTerminate(String objectId, DXEnvironment env) {
        return jobTerminate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the jobTerminate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobTerminate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobTerminate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "terminate", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the jobNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobNew(Class<T> outputClass) {
        return jobNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the jobNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobNew(Class<T> outputClass, DXEnvironment env) {
        return jobNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the jobNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/job/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the jobNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T jobNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/job/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the jobNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobNew() {
        return jobNew(mapper.createObjectNode());
    }
    /**
     * Invokes the jobNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/job/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the jobNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobNew(DXEnvironment env) {
        return jobNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the jobNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #jobNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode jobNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/job/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the notificationsGet method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsGet(Class<T> outputClass) {
        return notificationsGet(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the notificationsGet method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsGet(Class<T> outputClass, DXEnvironment env) {
        return notificationsGet(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the notificationsGet method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsGet(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/notifications/get", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the notificationsGet method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsGet(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/notifications/get", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the notificationsGet method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsGet(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsGet() {
        return notificationsGet(mapper.createObjectNode());
    }
    /**
     * Invokes the notificationsGet method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsGet(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsGet(JsonNode inputParams) {
        return new DXHTTPRequest().request("/notifications/get", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the notificationsGet method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsGet(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsGet(DXEnvironment env) {
        return notificationsGet(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the notificationsGet method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsGet(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsGet(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/notifications/get", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the notificationsMarkRead method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsMarkRead(Class<T> outputClass) {
        return notificationsMarkRead(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the notificationsMarkRead method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsMarkRead(Class<T> outputClass, DXEnvironment env) {
        return notificationsMarkRead(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the notificationsMarkRead method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsMarkRead(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/notifications/markRead", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the notificationsMarkRead method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T notificationsMarkRead(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/notifications/markRead", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the notificationsMarkRead method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsMarkRead(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsMarkRead() {
        return notificationsMarkRead(mapper.createObjectNode());
    }
    /**
     * Invokes the notificationsMarkRead method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsMarkRead(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsMarkRead(JsonNode inputParams) {
        return new DXHTTPRequest().request("/notifications/markRead", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the notificationsMarkRead method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsMarkRead(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsMarkRead(DXEnvironment env) {
        return notificationsMarkRead(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the notificationsMarkRead method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #notificationsMarkRead(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode notificationsMarkRead(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/notifications/markRead", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgDescribe(String objectId, Class<T> outputClass) {
        return orgDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgDescribe(String objectId) {
        return orgDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgDescribe(String objectId, DXEnvironment env) {
        return orgDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgFindMembers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindMembers(String objectId, Class<T> outputClass) {
        return orgFindMembers(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgFindMembers method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindMembers(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "findMembers",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgFindMembers method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindMembers(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgFindMembers(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgFindMembers method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindMembers(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "findMembers",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgFindMembers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindMembers(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindMembers(String objectId) {
        return orgFindMembers(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgFindMembers method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindMembers(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindMembers(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "findMembers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgFindMembers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindMembers(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindMembers(String objectId, DXEnvironment env) {
        return orgFindMembers(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgFindMembers method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindMembers(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindMembers(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "findMembers", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgFindProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindProjects(String objectId, Class<T> outputClass) {
        return orgFindProjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgFindProjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindProjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "findProjects",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgFindProjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindProjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgFindProjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgFindProjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindProjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "findProjects",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgFindProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindProjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindProjects(String objectId) {
        return orgFindProjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgFindProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindProjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindProjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "findProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgFindProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindProjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindProjects(String objectId, DXEnvironment env) {
        return orgFindProjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgFindProjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindProjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindProjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "findProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgFindApps method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindApps(String objectId, Class<T> outputClass) {
        return orgFindApps(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgFindApps method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindApps(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "findApps",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgFindApps method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindApps(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgFindApps(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgFindApps method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgFindApps(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "findApps",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgFindApps method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindApps(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindApps(String objectId) {
        return orgFindApps(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgFindApps method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindApps(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindApps(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "findApps", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgFindApps method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindApps(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindApps(String objectId, DXEnvironment env) {
        return orgFindApps(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgFindApps method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgFindApps(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgFindApps(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "findApps", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgInvite method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgInvite(String objectId, Class<T> outputClass) {
        return orgInvite(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgInvite method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgInvite(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "invite",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgInvite method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgInvite(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgInvite(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgInvite method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgInvite(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "invite",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgInvite method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgInvite(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgInvite(String objectId) {
        return orgInvite(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgInvite method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgInvite(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgInvite(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "invite", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgInvite method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgInvite(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgInvite(String objectId, DXEnvironment env) {
        return orgInvite(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgInvite method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgInvite(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgInvite(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "invite", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgRemoveMember method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgRemoveMember(String objectId, Class<T> outputClass) {
        return orgRemoveMember(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgRemoveMember method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgRemoveMember(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeMember",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgRemoveMember method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgRemoveMember(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgRemoveMember(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgRemoveMember method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgRemoveMember(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeMember",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgRemoveMember method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgRemoveMember(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgRemoveMember(String objectId) {
        return orgRemoveMember(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgRemoveMember method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgRemoveMember(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgRemoveMember(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeMember", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgRemoveMember method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgRemoveMember(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgRemoveMember(String objectId, DXEnvironment env) {
        return orgRemoveMember(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgRemoveMember method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgRemoveMember(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgRemoveMember(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeMember", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgSetMemberAccess method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgSetMemberAccess(String objectId, Class<T> outputClass) {
        return orgSetMemberAccess(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgSetMemberAccess method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgSetMemberAccess(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setMemberAccess",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgSetMemberAccess method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgSetMemberAccess(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgSetMemberAccess(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgSetMemberAccess method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgSetMemberAccess(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setMemberAccess",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgSetMemberAccess method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgSetMemberAccess(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgSetMemberAccess(String objectId) {
        return orgSetMemberAccess(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgSetMemberAccess method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgSetMemberAccess(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgSetMemberAccess(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setMemberAccess", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgSetMemberAccess method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgSetMemberAccess(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgSetMemberAccess(String objectId, DXEnvironment env) {
        return orgSetMemberAccess(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgSetMemberAccess method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgSetMemberAccess(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgSetMemberAccess(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setMemberAccess", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgUpdate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgUpdate(String objectId, Class<T> outputClass) {
        return orgUpdate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgUpdate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgUpdate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "update",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the orgUpdate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgUpdate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return orgUpdate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgUpdate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgUpdate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "update",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the orgUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgUpdate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgUpdate(String objectId) {
        return orgUpdate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the orgUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgUpdate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgUpdate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the orgUpdate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgUpdate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgUpdate(String objectId, DXEnvironment env) {
        return orgUpdate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgUpdate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgUpdate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgUpdate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the orgNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgNew(Class<T> outputClass) {
        return orgNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the orgNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgNew(Class<T> outputClass, DXEnvironment env) {
        return orgNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the orgNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/org/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the orgNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T orgNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/org/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the orgNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgNew() {
        return orgNew(mapper.createObjectNode());
    }
    /**
     * Invokes the orgNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/org/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the orgNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgNew(DXEnvironment env) {
        return orgNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the orgNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #orgNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode orgNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/org/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the projectAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectAddTags(String objectId, Class<T> outputClass) {
        return projectAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectAddTags(String objectId) {
        return projectAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectAddTags(String objectId, DXEnvironment env) {
        return projectAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectClone method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectClone(String objectId, Class<T> outputClass) {
        return projectClone(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectClone method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectClone(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "clone",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectClone method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectClone(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectClone(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectClone method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectClone(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "clone",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectClone method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectClone(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectClone(String objectId) {
        return projectClone(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectClone method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectClone(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectClone(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "clone", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the projectClone method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectClone(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectClone(String objectId, DXEnvironment env) {
        return projectClone(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectClone method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectClone(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectClone(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "clone", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the projectDecreasePermissions method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDecreasePermissions(String objectId, Class<T> outputClass) {
        return projectDecreasePermissions(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectDecreasePermissions method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDecreasePermissions(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "decreasePermissions",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectDecreasePermissions method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDecreasePermissions(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectDecreasePermissions(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectDecreasePermissions method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDecreasePermissions(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "decreasePermissions",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectDecreasePermissions method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDecreasePermissions(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDecreasePermissions(String objectId) {
        return projectDecreasePermissions(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectDecreasePermissions method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDecreasePermissions(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDecreasePermissions(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "decreasePermissions", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectDecreasePermissions method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDecreasePermissions(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDecreasePermissions(String objectId, DXEnvironment env) {
        return projectDecreasePermissions(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectDecreasePermissions method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDecreasePermissions(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDecreasePermissions(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "decreasePermissions", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDescribe(String objectId, Class<T> outputClass) {
        return projectDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDescribe(String objectId) {
        return projectDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDescribe(String objectId, DXEnvironment env) {
        return projectDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectDestroy method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDestroy(String objectId, Class<T> outputClass) {
        return projectDestroy(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectDestroy method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDestroy(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "destroy",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectDestroy method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDestroy(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectDestroy(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectDestroy method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectDestroy(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "destroy",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectDestroy method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDestroy(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDestroy(String objectId) {
        return projectDestroy(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectDestroy method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDestroy(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDestroy(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "destroy", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectDestroy method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDestroy(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDestroy(String objectId, DXEnvironment env) {
        return projectDestroy(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectDestroy method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectDestroy(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectDestroy(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "destroy", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectInvite method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectInvite(String objectId, Class<T> outputClass) {
        return projectInvite(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectInvite method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectInvite(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "invite",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectInvite method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectInvite(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectInvite(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectInvite method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectInvite(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "invite",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectInvite method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectInvite(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectInvite(String objectId) {
        return projectInvite(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectInvite method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectInvite(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectInvite(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "invite", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the projectInvite method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectInvite(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectInvite(String objectId, DXEnvironment env) {
        return projectInvite(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectInvite method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectInvite(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectInvite(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "invite", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the projectLeave method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectLeave(String objectId, Class<T> outputClass) {
        return projectLeave(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectLeave method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectLeave(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "leave",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectLeave method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectLeave(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectLeave(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectLeave method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectLeave(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "leave",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectLeave method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectLeave(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectLeave(String objectId) {
        return projectLeave(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectLeave method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectLeave(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectLeave(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "leave", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectLeave method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectLeave(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectLeave(String objectId, DXEnvironment env) {
        return projectLeave(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectLeave method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectLeave(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectLeave(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "leave", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectListFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectListFolder(String objectId, Class<T> outputClass) {
        return projectListFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectListFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectListFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listFolder",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectListFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectListFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectListFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectListFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectListFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listFolder",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectListFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectListFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectListFolder(String objectId) {
        return projectListFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectListFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectListFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectListFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectListFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectListFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectListFolder(String objectId, DXEnvironment env) {
        return projectListFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectListFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectListFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectListFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectMove method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectMove(String objectId, Class<T> outputClass) {
        return projectMove(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectMove method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectMove(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "move",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectMove method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectMove(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectMove(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectMove method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectMove(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "move",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectMove method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectMove(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectMove(String objectId) {
        return projectMove(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectMove method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectMove(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectMove(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "move", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the projectMove method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectMove(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectMove(String objectId, DXEnvironment env) {
        return projectMove(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectMove method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectMove(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectMove(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "move", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the projectNewFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNewFolder(String objectId, Class<T> outputClass) {
        return projectNewFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectNewFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNewFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "newFolder",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectNewFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNewFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectNewFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectNewFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNewFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "newFolder",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectNewFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNewFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNewFolder(String objectId) {
        return projectNewFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectNewFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNewFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNewFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "newFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectNewFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNewFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNewFolder(String objectId, DXEnvironment env) {
        return projectNewFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectNewFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNewFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNewFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "newFolder", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectRemoveFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveFolder(String objectId, Class<T> outputClass) {
        return projectRemoveFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectRemoveFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeFolder",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectRemoveFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectRemoveFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectRemoveFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeFolder",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectRemoveFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveFolder(String objectId) {
        return projectRemoveFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectRemoveFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the projectRemoveFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveFolder(String objectId, DXEnvironment env) {
        return projectRemoveFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectRemoveFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the projectRemoveObjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveObjects(String objectId, Class<T> outputClass) {
        return projectRemoveObjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectRemoveObjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveObjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeObjects",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectRemoveObjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveObjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectRemoveObjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectRemoveObjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveObjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeObjects",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectRemoveObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveObjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveObjects(String objectId) {
        return projectRemoveObjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectRemoveObjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveObjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveObjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeObjects", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the projectRemoveObjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveObjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveObjects(String objectId, DXEnvironment env) {
        return projectRemoveObjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectRemoveObjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveObjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveObjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeObjects", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the projectRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveTags(String objectId, Class<T> outputClass) {
        return projectRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveTags(String objectId) {
        return projectRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveTags(String objectId, DXEnvironment env) {
        return projectRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectRenameFolder method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRenameFolder(String objectId, Class<T> outputClass) {
        return projectRenameFolder(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectRenameFolder method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRenameFolder(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "renameFolder",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectRenameFolder method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRenameFolder(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectRenameFolder(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectRenameFolder method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectRenameFolder(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "renameFolder",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectRenameFolder method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRenameFolder(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRenameFolder(String objectId) {
        return projectRenameFolder(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectRenameFolder method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRenameFolder(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRenameFolder(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "renameFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the projectRenameFolder method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRenameFolder(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRenameFolder(String objectId, DXEnvironment env) {
        return projectRenameFolder(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectRenameFolder method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectRenameFolder(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectRenameFolder(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "renameFolder", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the projectSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectSetProperties(String objectId, Class<T> outputClass) {
        return projectSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectSetProperties(String objectId) {
        return projectSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectSetProperties(String objectId, DXEnvironment env) {
        return projectSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectTransfer method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectTransfer(String objectId, Class<T> outputClass) {
        return projectTransfer(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectTransfer method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectTransfer(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "transfer",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectTransfer method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectTransfer(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectTransfer(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectTransfer method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectTransfer(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "transfer",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectTransfer method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectTransfer(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectTransfer(String objectId) {
        return projectTransfer(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectTransfer method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectTransfer(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectTransfer(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "transfer", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectTransfer method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectTransfer(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectTransfer(String objectId, DXEnvironment env) {
        return projectTransfer(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectTransfer method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectTransfer(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectTransfer(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "transfer", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectUpdate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdate(String objectId, Class<T> outputClass) {
        return projectUpdate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectUpdate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "update",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectUpdate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectUpdate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectUpdate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "update",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdate(String objectId) {
        return projectUpdate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectUpdate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdate(String objectId, DXEnvironment env) {
        return projectUpdate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectUpdate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectUpdateSponsorship method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdateSponsorship(String objectId, Class<T> outputClass) {
        return projectUpdateSponsorship(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectUpdateSponsorship method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdateSponsorship(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "updateSponsorship",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the projectUpdateSponsorship method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdateSponsorship(String objectId, Class<T> outputClass, DXEnvironment env) {
        return projectUpdateSponsorship(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectUpdateSponsorship method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectUpdateSponsorship(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "updateSponsorship",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the projectUpdateSponsorship method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdateSponsorship(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdateSponsorship(String objectId) {
        return projectUpdateSponsorship(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the projectUpdateSponsorship method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdateSponsorship(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdateSponsorship(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "updateSponsorship", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the projectUpdateSponsorship method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdateSponsorship(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdateSponsorship(String objectId, DXEnvironment env) {
        return projectUpdateSponsorship(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectUpdateSponsorship method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectUpdateSponsorship(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectUpdateSponsorship(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "updateSponsorship", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the projectNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNew(Class<T> outputClass) {
        return projectNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the projectNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNew(Class<T> outputClass, DXEnvironment env) {
        return projectNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the projectNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/project/new", input, RetryStrategy.UNSAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the projectNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T projectNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/project/new", input, RetryStrategy.UNSAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the projectNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNew() {
        return projectNew(mapper.createObjectNode());
    }
    /**
     * Invokes the projectNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/project/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the projectNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNew(DXEnvironment env) {
        return projectNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the projectNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #projectNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode projectNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/project/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the recordAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTags(String objectId, Class<T> outputClass) {
        return recordAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTags(String objectId) {
        return recordAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTags(String objectId, DXEnvironment env) {
        return recordAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordAddTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTypes(String objectId, Class<T> outputClass) {
        return recordAddTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordAddTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordAddTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordAddTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordAddTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordAddTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTypes(String objectId) {
        return recordAddTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordAddTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTypes(String objectId, DXEnvironment env) {
        return recordAddTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordAddTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordAddTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordAddTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordClose method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordClose(String objectId, Class<T> outputClass) {
        return recordClose(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordClose method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordClose(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "close",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordClose method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordClose(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordClose(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordClose method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordClose(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "close",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordClose(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordClose(String objectId) {
        return recordClose(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordClose(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordClose(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordClose method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordClose(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordClose(String objectId, DXEnvironment env) {
        return recordClose(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordClose method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordClose(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordClose(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordDescribe(String objectId, Class<T> outputClass) {
        return recordDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordDescribe(String objectId) {
        return recordDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordDescribe(String objectId, DXEnvironment env) {
        return recordDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordGetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordGetDetails(String objectId, Class<T> outputClass) {
        return recordGetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordGetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordGetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "getDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordGetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordGetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordGetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordGetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordGetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordGetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordGetDetails(String objectId) {
        return recordGetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordGetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordGetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordGetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordGetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordGetDetails(String objectId, DXEnvironment env) {
        return recordGetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordGetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordGetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordGetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordListProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordListProjects(String objectId, Class<T> outputClass) {
        return recordListProjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordListProjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordListProjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listProjects",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordListProjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordListProjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordListProjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordListProjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordListProjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordListProjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordListProjects(String objectId) {
        return recordListProjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordListProjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordListProjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordListProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordListProjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordListProjects(String objectId, DXEnvironment env) {
        return recordListProjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordListProjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordListProjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordListProjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTags(String objectId, Class<T> outputClass) {
        return recordRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTags(String objectId) {
        return recordRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTags(String objectId, DXEnvironment env) {
        return recordRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordRemoveTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTypes(String objectId, Class<T> outputClass) {
        return recordRemoveTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordRemoveTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordRemoveTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordRemoveTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordRemoveTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRemoveTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTypes(String objectId) {
        return recordRemoveTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordRemoveTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTypes(String objectId, DXEnvironment env) {
        return recordRemoveTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordRemoveTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRemoveTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRemoveTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordRename method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRename(String objectId, Class<T> outputClass) {
        return recordRename(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordRename method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRename(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "rename",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordRename method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRename(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordRename(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordRename method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordRename(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "rename",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRename(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRename(String objectId) {
        return recordRename(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRename(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRename(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordRename method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRename(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRename(String objectId, DXEnvironment env) {
        return recordRename(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordRename method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordRename(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordRename(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordSetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetDetails(String objectId, Class<T> outputClass) {
        return recordSetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordSetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordSetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordSetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordSetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetDetails(String objectId) {
        return recordSetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordSetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetDetails(String objectId, DXEnvironment env) {
        return recordSetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordSetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetProperties(String objectId, Class<T> outputClass) {
        return recordSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetProperties(String objectId) {
        return recordSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetProperties(String objectId, DXEnvironment env) {
        return recordSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordSetVisibility method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetVisibility(String objectId, Class<T> outputClass) {
        return recordSetVisibility(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordSetVisibility method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetVisibility(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the recordSetVisibility method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetVisibility(String objectId, Class<T> outputClass, DXEnvironment env) {
        return recordSetVisibility(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordSetVisibility method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordSetVisibility(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the recordSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetVisibility(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetVisibility(String objectId) {
        return recordSetVisibility(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the recordSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetVisibility(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetVisibility(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the recordSetVisibility method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetVisibility(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetVisibility(String objectId, DXEnvironment env) {
        return recordSetVisibility(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordSetVisibility method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordSetVisibility(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordSetVisibility(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the recordNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordNew(Class<T> outputClass) {
        return recordNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the recordNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordNew(Class<T> outputClass, DXEnvironment env) {
        return recordNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the recordNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/record/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the recordNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T recordNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/record/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the recordNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordNew() {
        return recordNew(mapper.createObjectNode());
    }
    /**
     * Invokes the recordNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/record/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the recordNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordNew(DXEnvironment env) {
        return recordNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the recordNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #recordNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode recordNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/record/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the systemDescribeDataObjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeDataObjects(Class<T> outputClass) {
        return systemDescribeDataObjects(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemDescribeDataObjects method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeDataObjects(Class<T> outputClass, DXEnvironment env) {
        return systemDescribeDataObjects(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemDescribeDataObjects method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeDataObjects(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/describeDataObjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemDescribeDataObjects method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeDataObjects(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/describeDataObjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemDescribeDataObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeDataObjects(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeDataObjects() {
        return systemDescribeDataObjects(mapper.createObjectNode());
    }
    /**
     * Invokes the systemDescribeDataObjects method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeDataObjects(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeDataObjects(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/describeDataObjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemDescribeDataObjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeDataObjects(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeDataObjects(DXEnvironment env) {
        return systemDescribeDataObjects(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemDescribeDataObjects method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeDataObjects(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeDataObjects(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/describeDataObjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemDescribeExecutions method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeExecutions(Class<T> outputClass) {
        return systemDescribeExecutions(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemDescribeExecutions method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeExecutions(Class<T> outputClass, DXEnvironment env) {
        return systemDescribeExecutions(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemDescribeExecutions method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeExecutions(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/describeExecutions", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemDescribeExecutions method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeExecutions(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/describeExecutions", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemDescribeExecutions method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeExecutions(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeExecutions() {
        return systemDescribeExecutions(mapper.createObjectNode());
    }
    /**
     * Invokes the systemDescribeExecutions method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeExecutions(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeExecutions(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/describeExecutions", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemDescribeExecutions method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeExecutions(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeExecutions(DXEnvironment env) {
        return systemDescribeExecutions(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemDescribeExecutions method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeExecutions(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeExecutions(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/describeExecutions", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemDescribeProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeProjects(Class<T> outputClass) {
        return systemDescribeProjects(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemDescribeProjects method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeProjects(Class<T> outputClass, DXEnvironment env) {
        return systemDescribeProjects(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemDescribeProjects method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeProjects(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/describeProjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemDescribeProjects method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemDescribeProjects(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/describeProjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemDescribeProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeProjects(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeProjects() {
        return systemDescribeProjects(mapper.createObjectNode());
    }
    /**
     * Invokes the systemDescribeProjects method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeProjects(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeProjects(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/describeProjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemDescribeProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeProjects(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeProjects(DXEnvironment env) {
        return systemDescribeProjects(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemDescribeProjects method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemDescribeProjects(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemDescribeProjects(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/describeProjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindAffiliates method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAffiliates(Class<T> outputClass) {
        return systemFindAffiliates(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindAffiliates method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAffiliates(Class<T> outputClass, DXEnvironment env) {
        return systemFindAffiliates(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindAffiliates method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAffiliates(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findAffiliates", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindAffiliates method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAffiliates(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findAffiliates", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindAffiliates method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAffiliates(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAffiliates() {
        return systemFindAffiliates(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindAffiliates method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAffiliates(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAffiliates(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findAffiliates", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindAffiliates method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAffiliates(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAffiliates(DXEnvironment env) {
        return systemFindAffiliates(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindAffiliates method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAffiliates(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAffiliates(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findAffiliates", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindApps method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindApps(Class<T> outputClass) {
        return systemFindApps(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindApps method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindApps(Class<T> outputClass, DXEnvironment env) {
        return systemFindApps(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindApps method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindApps(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findApps", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindApps method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindApps(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findApps", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindApps method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindApps(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindApps() {
        return systemFindApps(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindApps method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindApps(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindApps(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findApps", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindApps method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindApps(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindApps(DXEnvironment env) {
        return systemFindApps(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindApps method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindApps(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindApps(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findApps", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindDataObjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindDataObjects(Class<T> outputClass) {
        return systemFindDataObjects(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindDataObjects method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindDataObjects(Class<T> outputClass, DXEnvironment env) {
        return systemFindDataObjects(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindDataObjects method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindDataObjects(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findDataObjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindDataObjects method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindDataObjects(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findDataObjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindDataObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindDataObjects(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindDataObjects() {
        return systemFindDataObjects(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindDataObjects method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindDataObjects(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindDataObjects(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findDataObjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindDataObjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindDataObjects(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindDataObjects(DXEnvironment env) {
        return systemFindDataObjects(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindDataObjects method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindDataObjects(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindDataObjects(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findDataObjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindGlobalWorkflows method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindGlobalWorkflows(Class<T> outputClass) {
        return systemFindGlobalWorkflows(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindGlobalWorkflows method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindGlobalWorkflows(Class<T> outputClass, DXEnvironment env) {
        return systemFindGlobalWorkflows(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindGlobalWorkflows method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindGlobalWorkflows(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findGlobalWorkflows", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindGlobalWorkflows method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindGlobalWorkflows(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findGlobalWorkflows", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindGlobalWorkflows method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindGlobalWorkflows(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindGlobalWorkflows() {
        return systemFindGlobalWorkflows(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindGlobalWorkflows method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindGlobalWorkflows(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindGlobalWorkflows(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findGlobalWorkflows", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindGlobalWorkflows method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindGlobalWorkflows(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindGlobalWorkflows(DXEnvironment env) {
        return systemFindGlobalWorkflows(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindGlobalWorkflows method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindGlobalWorkflows(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindGlobalWorkflows(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findGlobalWorkflows", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemResolveDataObjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemResolveDataObjects(Class<T> outputClass) {
        return systemResolveDataObjects(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemResolveDataObjects method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemResolveDataObjects(Class<T> outputClass, DXEnvironment env) {
        return systemResolveDataObjects(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemResolveDataObjects method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemResolveDataObjects(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/resolveDataObjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemResolveDataObjects method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemResolveDataObjects(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/resolveDataObjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemResolveDataObjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemResolveDataObjects(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemResolveDataObjects() {
        return systemResolveDataObjects(mapper.createObjectNode());
    }
    /**
     * Invokes the systemResolveDataObjects method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemResolveDataObjects(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemResolveDataObjects(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/resolveDataObjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemResolveDataObjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemResolveDataObjects(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemResolveDataObjects(DXEnvironment env) {
        return systemResolveDataObjects(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemResolveDataObjects method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemResolveDataObjects(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemResolveDataObjects(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/resolveDataObjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindExecutions method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindExecutions(Class<T> outputClass) {
        return systemFindExecutions(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindExecutions method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindExecutions(Class<T> outputClass, DXEnvironment env) {
        return systemFindExecutions(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindExecutions method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindExecutions(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findExecutions", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindExecutions method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindExecutions(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findExecutions", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindExecutions method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindExecutions(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindExecutions() {
        return systemFindExecutions(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindExecutions method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindExecutions(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindExecutions(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findExecutions", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindExecutions method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindExecutions(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindExecutions(DXEnvironment env) {
        return systemFindExecutions(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindExecutions method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindExecutions(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindExecutions(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findExecutions", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindAnalyses method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAnalyses(Class<T> outputClass) {
        return systemFindAnalyses(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindAnalyses method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAnalyses(Class<T> outputClass, DXEnvironment env) {
        return systemFindAnalyses(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindAnalyses method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAnalyses(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findAnalyses", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindAnalyses method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindAnalyses(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findAnalyses", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindAnalyses method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAnalyses(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAnalyses() {
        return systemFindAnalyses(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindAnalyses method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAnalyses(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAnalyses(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findAnalyses", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindAnalyses method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAnalyses(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAnalyses(DXEnvironment env) {
        return systemFindAnalyses(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindAnalyses method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindAnalyses(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindAnalyses(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findAnalyses", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindJobs method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindJobs(Class<T> outputClass) {
        return systemFindJobs(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindJobs method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindJobs(Class<T> outputClass, DXEnvironment env) {
        return systemFindJobs(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindJobs method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindJobs(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findJobs", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindJobs method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindJobs(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findJobs", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindJobs method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindJobs(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindJobs() {
        return systemFindJobs(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindJobs method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindJobs(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindJobs(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findJobs", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindJobs method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindJobs(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindJobs(DXEnvironment env) {
        return systemFindJobs(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindJobs method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindJobs(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindJobs(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findJobs", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjects(Class<T> outputClass) {
        return systemFindProjects(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindProjects method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjects(Class<T> outputClass, DXEnvironment env) {
        return systemFindProjects(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindProjects method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjects(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findProjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindProjects method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjects(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findProjects", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjects(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjects() {
        return systemFindProjects(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindProjects method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjects(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjects(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findProjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjects(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjects(DXEnvironment env) {
        return systemFindProjects(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindProjects method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjects(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjects(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findProjects", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindUsers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindUsers(Class<T> outputClass) {
        return systemFindUsers(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindUsers method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindUsers(Class<T> outputClass, DXEnvironment env) {
        return systemFindUsers(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindUsers method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindUsers(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findUsers", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindUsers method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindUsers(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findUsers", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindUsers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindUsers(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindUsers() {
        return systemFindUsers(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindUsers method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindUsers(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindUsers(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findUsers", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindUsers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindUsers(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindUsers(DXEnvironment env) {
        return systemFindUsers(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindUsers method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindUsers(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindUsers(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findUsers", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindProjectMembers method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjectMembers(Class<T> outputClass) {
        return systemFindProjectMembers(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindProjectMembers method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjectMembers(Class<T> outputClass, DXEnvironment env) {
        return systemFindProjectMembers(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindProjectMembers method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjectMembers(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findProjectMembers", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindProjectMembers method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindProjectMembers(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findProjectMembers", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindProjectMembers method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjectMembers(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjectMembers() {
        return systemFindProjectMembers(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindProjectMembers method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjectMembers(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjectMembers(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findProjectMembers", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindProjectMembers method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjectMembers(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjectMembers(DXEnvironment env) {
        return systemFindProjectMembers(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindProjectMembers method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindProjectMembers(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindProjectMembers(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findProjectMembers", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemFindOrgs method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindOrgs(Class<T> outputClass) {
        return systemFindOrgs(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemFindOrgs method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindOrgs(Class<T> outputClass, DXEnvironment env) {
        return systemFindOrgs(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemFindOrgs method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindOrgs(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/findOrgs", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemFindOrgs method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemFindOrgs(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/findOrgs", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemFindOrgs method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindOrgs(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindOrgs() {
        return systemFindOrgs(mapper.createObjectNode());
    }
    /**
     * Invokes the systemFindOrgs method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindOrgs(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindOrgs(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/findOrgs", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemFindOrgs method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindOrgs(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindOrgs(DXEnvironment env) {
        return systemFindOrgs(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemFindOrgs method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemFindOrgs(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemFindOrgs(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/findOrgs", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemGenerateBatchInputs method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGenerateBatchInputs(Class<T> outputClass) {
        return systemGenerateBatchInputs(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemGenerateBatchInputs method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGenerateBatchInputs(Class<T> outputClass, DXEnvironment env) {
        return systemGenerateBatchInputs(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemGenerateBatchInputs method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGenerateBatchInputs(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/generateBatchInputs", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemGenerateBatchInputs method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGenerateBatchInputs(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/generateBatchInputs", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemGenerateBatchInputs method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGenerateBatchInputs(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGenerateBatchInputs() {
        return systemGenerateBatchInputs(mapper.createObjectNode());
    }
    /**
     * Invokes the systemGenerateBatchInputs method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGenerateBatchInputs(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGenerateBatchInputs(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/generateBatchInputs", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemGenerateBatchInputs method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGenerateBatchInputs(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGenerateBatchInputs(DXEnvironment env) {
        return systemGenerateBatchInputs(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemGenerateBatchInputs method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGenerateBatchInputs(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGenerateBatchInputs(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/generateBatchInputs", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemGlobalSearch method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGlobalSearch(Class<T> outputClass) {
        return systemGlobalSearch(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemGlobalSearch method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGlobalSearch(Class<T> outputClass, DXEnvironment env) {
        return systemGlobalSearch(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemGlobalSearch method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGlobalSearch(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/globalSearch", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemGlobalSearch method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGlobalSearch(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/globalSearch", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemGlobalSearch method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGlobalSearch(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGlobalSearch() {
        return systemGlobalSearch(mapper.createObjectNode());
    }
    /**
     * Invokes the systemGlobalSearch method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGlobalSearch(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGlobalSearch(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/globalSearch", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemGlobalSearch method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGlobalSearch(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGlobalSearch(DXEnvironment env) {
        return systemGlobalSearch(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemGlobalSearch method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGlobalSearch(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGlobalSearch(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/globalSearch", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemGreet method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGreet(Class<T> outputClass) {
        return systemGreet(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemGreet method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGreet(Class<T> outputClass, DXEnvironment env) {
        return systemGreet(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemGreet method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGreet(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/greet", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemGreet method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemGreet(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/greet", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemGreet method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGreet(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGreet() {
        return systemGreet(mapper.createObjectNode());
    }
    /**
     * Invokes the systemGreet method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGreet(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGreet(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/greet", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemGreet method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGreet(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGreet(DXEnvironment env) {
        return systemGreet(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemGreet method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemGreet(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemGreet(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/greet", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemHeaders method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemHeaders(Class<T> outputClass) {
        return systemHeaders(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemHeaders method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemHeaders(Class<T> outputClass, DXEnvironment env) {
        return systemHeaders(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemHeaders method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemHeaders(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/headers", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemHeaders method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemHeaders(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/headers", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemHeaders method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemHeaders(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemHeaders() {
        return systemHeaders(mapper.createObjectNode());
    }
    /**
     * Invokes the systemHeaders method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemHeaders(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemHeaders(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/headers", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemHeaders method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemHeaders(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemHeaders(DXEnvironment env) {
        return systemHeaders(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemHeaders method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemHeaders(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemHeaders(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/headers", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemShortenURL method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemShortenURL(Class<T> outputClass) {
        return systemShortenURL(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemShortenURL method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemShortenURL(Class<T> outputClass, DXEnvironment env) {
        return systemShortenURL(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemShortenURL method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemShortenURL(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/shortenURL", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemShortenURL method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemShortenURL(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/shortenURL", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemShortenURL method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemShortenURL(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemShortenURL() {
        return systemShortenURL(mapper.createObjectNode());
    }
    /**
     * Invokes the systemShortenURL method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemShortenURL(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemShortenURL(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/shortenURL", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemShortenURL method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemShortenURL(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemShortenURL(DXEnvironment env) {
        return systemShortenURL(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemShortenURL method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemShortenURL(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemShortenURL(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/shortenURL", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the systemWhoami method with an empty input, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemWhoami(Class<T> outputClass) {
        return systemWhoami(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the systemWhoami method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemWhoami(Class<T> outputClass, DXEnvironment env) {
        return systemWhoami(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the systemWhoami method with the specified input, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemWhoami(Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/system/whoami", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the systemWhoami method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T systemWhoami(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/system/whoami", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the systemWhoami method.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemWhoami(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemWhoami() {
        return systemWhoami(mapper.createObjectNode());
    }
    /**
     * Invokes the systemWhoami method with the specified input parameters.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemWhoami(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemWhoami(JsonNode inputParams) {
        return new DXHTTPRequest().request("/system/whoami", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the systemWhoami method with the specified environment.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemWhoami(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemWhoami(DXEnvironment env) {
        return systemWhoami(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the systemWhoami method with the specified environment and input parameters.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #systemWhoami(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode systemWhoami(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/system/whoami", inputParams, RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the userDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userDescribe(String objectId, Class<T> outputClass) {
        return userDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the userDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the userDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return userDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the userDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the userDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userDescribe(String objectId) {
        return userDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the userDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the userDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userDescribe(String objectId, DXEnvironment env) {
        return userDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the userDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the userUpdate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userUpdate(String objectId, Class<T> outputClass) {
        return userUpdate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the userUpdate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userUpdate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "update",
                        input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the userUpdate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userUpdate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return userUpdate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the userUpdate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T userUpdate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "update",
                    input, RetryStrategy.UNSAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the userUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userUpdate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userUpdate(String objectId) {
        return userUpdate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the userUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userUpdate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userUpdate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the userUpdate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userUpdate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userUpdate(String objectId, DXEnvironment env) {
        return userUpdate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the userUpdate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #userUpdate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode userUpdate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowAddStage method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddStage(String objectId, Class<T> outputClass) {
        return workflowAddStage(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowAddStage method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddStage(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addStage",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowAddStage method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddStage(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowAddStage(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowAddStage method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddStage(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addStage",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowAddStage method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddStage(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddStage(String objectId) {
        return workflowAddStage(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowAddStage method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddStage(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddStage(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addStage", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowAddStage method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddStage(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddStage(String objectId, DXEnvironment env) {
        return workflowAddStage(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowAddStage method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddStage(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddStage(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addStage", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowAddTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTags(String objectId, Class<T> outputClass) {
        return workflowAddTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowAddTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowAddTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowAddTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowAddTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowAddTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTags(String objectId) {
        return workflowAddTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowAddTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowAddTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTags(String objectId, DXEnvironment env) {
        return workflowAddTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowAddTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowAddTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTypes(String objectId, Class<T> outputClass) {
        return workflowAddTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowAddTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "addTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowAddTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowAddTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowAddTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowAddTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowAddTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTypes(String objectId) {
        return workflowAddTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowAddTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowAddTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTypes(String objectId, DXEnvironment env) {
        return workflowAddTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowAddTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowAddTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowAddTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "addTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowClose method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowClose(String objectId, Class<T> outputClass) {
        return workflowClose(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowClose method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowClose(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "close",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowClose method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowClose(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowClose(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowClose method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowClose(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "close",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowClose method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowClose(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowClose(String objectId) {
        return workflowClose(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowClose method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowClose(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowClose(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowClose method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowClose(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowClose(String objectId, DXEnvironment env) {
        return workflowClose(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowClose method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowClose(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowClose(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "close", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowDescribe method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDescribe(String objectId, Class<T> outputClass) {
        return workflowDescribe(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowDescribe method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDescribe(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "describe",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowDescribe method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDescribe(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowDescribe(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowDescribe method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDescribe(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "describe",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowDescribe method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDescribe(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDescribe(String objectId) {
        return workflowDescribe(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowDescribe method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDescribe(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDescribe(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowDescribe method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDescribe(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDescribe(String objectId, DXEnvironment env) {
        return workflowDescribe(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowDescribe method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDescribe(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDescribe(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "describe", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowDryRun method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDryRun(String objectId, Class<T> outputClass) {
        return workflowDryRun(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowDryRun method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDryRun(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "dryRun",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowDryRun method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDryRun(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowDryRun(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowDryRun method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowDryRun(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "dryRun",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowDryRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDryRun(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDryRun(String objectId) {
        return workflowDryRun(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowDryRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDryRun(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDryRun(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "dryRun", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowDryRun method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDryRun(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDryRun(String objectId, DXEnvironment env) {
        return workflowDryRun(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowDryRun method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowDryRun(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowDryRun(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "dryRun", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowGetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowGetDetails(String objectId, Class<T> outputClass) {
        return workflowGetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowGetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowGetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "getDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowGetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowGetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowGetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowGetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowGetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowGetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowGetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowGetDetails(String objectId) {
        return workflowGetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowGetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowGetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowGetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowGetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowGetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowGetDetails(String objectId, DXEnvironment env) {
        return workflowGetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowGetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowGetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowGetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "getDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowIsStageCompatible method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowIsStageCompatible(String objectId, Class<T> outputClass) {
        return workflowIsStageCompatible(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowIsStageCompatible method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowIsStageCompatible(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "isStageCompatible",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowIsStageCompatible method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowIsStageCompatible(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowIsStageCompatible(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowIsStageCompatible method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowIsStageCompatible(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "isStageCompatible",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowIsStageCompatible method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowIsStageCompatible(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowIsStageCompatible(String objectId) {
        return workflowIsStageCompatible(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowIsStageCompatible method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowIsStageCompatible(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowIsStageCompatible(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "isStageCompatible", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowIsStageCompatible method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowIsStageCompatible(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowIsStageCompatible(String objectId, DXEnvironment env) {
        return workflowIsStageCompatible(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowIsStageCompatible method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowIsStageCompatible(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowIsStageCompatible(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "isStageCompatible", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowListProjects method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowListProjects(String objectId, Class<T> outputClass) {
        return workflowListProjects(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowListProjects method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowListProjects(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "listProjects",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowListProjects method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowListProjects(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowListProjects(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowListProjects method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowListProjects(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowListProjects method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowListProjects(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowListProjects(String objectId) {
        return workflowListProjects(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowListProjects method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowListProjects(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowListProjects(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowListProjects method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowListProjects(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowListProjects(String objectId, DXEnvironment env) {
        return workflowListProjects(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowListProjects method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowListProjects(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowListProjects(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "listProjects", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowMoveStage method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowMoveStage(String objectId, Class<T> outputClass) {
        return workflowMoveStage(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowMoveStage method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowMoveStage(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "moveStage",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowMoveStage method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowMoveStage(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowMoveStage(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowMoveStage method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowMoveStage(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "moveStage",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowMoveStage method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowMoveStage(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowMoveStage(String objectId) {
        return workflowMoveStage(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowMoveStage method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowMoveStage(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowMoveStage(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "moveStage", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowMoveStage method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowMoveStage(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowMoveStage(String objectId, DXEnvironment env) {
        return workflowMoveStage(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowMoveStage method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowMoveStage(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowMoveStage(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "moveStage", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowOverwrite method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowOverwrite(String objectId, Class<T> outputClass) {
        return workflowOverwrite(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowOverwrite method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowOverwrite(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "overwrite",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowOverwrite method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowOverwrite(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowOverwrite(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowOverwrite method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowOverwrite(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "overwrite",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowOverwrite method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowOverwrite(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowOverwrite(String objectId) {
        return workflowOverwrite(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowOverwrite method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowOverwrite(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowOverwrite(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "overwrite", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowOverwrite method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowOverwrite(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowOverwrite(String objectId, DXEnvironment env) {
        return workflowOverwrite(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowOverwrite method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowOverwrite(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowOverwrite(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "overwrite", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowRemoveStage method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveStage(String objectId, Class<T> outputClass) {
        return workflowRemoveStage(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowRemoveStage method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveStage(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeStage",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowRemoveStage method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveStage(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowRemoveStage(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowRemoveStage method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveStage(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeStage",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowRemoveStage method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveStage(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveStage(String objectId) {
        return workflowRemoveStage(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowRemoveStage method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveStage(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveStage(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeStage", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowRemoveStage method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveStage(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveStage(String objectId, DXEnvironment env) {
        return workflowRemoveStage(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowRemoveStage method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveStage(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveStage(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeStage", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowRemoveTags method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTags(String objectId, Class<T> outputClass) {
        return workflowRemoveTags(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowRemoveTags method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTags(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTags",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowRemoveTags method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTags(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowRemoveTags(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowRemoveTags method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTags(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowRemoveTags method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTags(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTags(String objectId) {
        return workflowRemoveTags(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowRemoveTags method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTags(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTags(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowRemoveTags method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTags(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTags(String objectId, DXEnvironment env) {
        return workflowRemoveTags(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowRemoveTags method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTags(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTags(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTags", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowRemoveTypes method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTypes(String objectId, Class<T> outputClass) {
        return workflowRemoveTypes(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowRemoveTypes method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTypes(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowRemoveTypes method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTypes(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowRemoveTypes(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowRemoveTypes method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRemoveTypes(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowRemoveTypes method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTypes(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTypes(String objectId) {
        return workflowRemoveTypes(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowRemoveTypes method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTypes(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTypes(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowRemoveTypes method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTypes(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTypes(String objectId, DXEnvironment env) {
        return workflowRemoveTypes(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowRemoveTypes method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRemoveTypes(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRemoveTypes(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "removeTypes", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowRename method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRename(String objectId, Class<T> outputClass) {
        return workflowRename(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowRename method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRename(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "rename",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowRename method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRename(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowRename(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowRename method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRename(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "rename",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowRename method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRename(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRename(String objectId) {
        return workflowRename(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowRename method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRename(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRename(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowRename method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRename(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRename(String objectId, DXEnvironment env) {
        return workflowRename(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowRename method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRename(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRename(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "rename", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowRun method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRun(String objectId, Class<T> outputClass) {
        return workflowRun(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowRun method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRun(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "run",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowRun method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRun(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowRun(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowRun method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowRun(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "run",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowRun method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRun(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRun(String objectId) {
        return workflowRun(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowRun method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRun(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRun(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowRun method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRun(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRun(String objectId, DXEnvironment env) {
        return workflowRun(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowRun method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowRun(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowRun(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "run", inputParams,
                RetryStrategy.UNSAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowValidateBatch method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowValidateBatch(String objectId, Class<T> outputClass) {
        return workflowValidateBatch(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowValidateBatch method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowValidateBatch(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "validateBatch",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowValidateBatch method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowValidateBatch(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowValidateBatch(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowValidateBatch method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowValidateBatch(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "validateBatch",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowValidateBatch method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowValidateBatch(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowValidateBatch(String objectId) {
        return workflowValidateBatch(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowValidateBatch method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowValidateBatch(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowValidateBatch(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "validateBatch", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowValidateBatch method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowValidateBatch(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowValidateBatch(String objectId, DXEnvironment env) {
        return workflowValidateBatch(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowValidateBatch method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowValidateBatch(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowValidateBatch(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "validateBatch", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowSetDetails method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetDetails(String objectId, Class<T> outputClass) {
        return workflowSetDetails(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowSetDetails method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetDetails(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setDetails",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowSetDetails method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetDetails(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowSetDetails(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowSetDetails method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetDetails(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowSetDetails method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetDetails(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetDetails(String objectId) {
        return workflowSetDetails(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowSetDetails method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetDetails(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetDetails(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowSetDetails method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetDetails(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetDetails(String objectId, DXEnvironment env) {
        return workflowSetDetails(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowSetDetails method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetDetails(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetDetails(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setDetails", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowSetProperties method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetProperties(String objectId, Class<T> outputClass) {
        return workflowSetProperties(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowSetProperties method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetProperties(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setProperties",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowSetProperties method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetProperties(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowSetProperties(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowSetProperties method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetProperties(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowSetProperties method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetProperties(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetProperties(String objectId) {
        return workflowSetProperties(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowSetProperties method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetProperties(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetProperties(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowSetProperties method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetProperties(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetProperties(String objectId, DXEnvironment env) {
        return workflowSetProperties(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowSetProperties method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetProperties(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetProperties(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setProperties", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowSetStageInputs method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetStageInputs(String objectId, Class<T> outputClass) {
        return workflowSetStageInputs(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowSetStageInputs method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetStageInputs(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setStageInputs",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowSetStageInputs method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetStageInputs(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowSetStageInputs(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowSetStageInputs method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetStageInputs(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setStageInputs",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowSetStageInputs method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetStageInputs(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetStageInputs(String objectId) {
        return workflowSetStageInputs(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowSetStageInputs method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetStageInputs(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetStageInputs(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setStageInputs", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowSetStageInputs method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetStageInputs(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetStageInputs(String objectId, DXEnvironment env) {
        return workflowSetStageInputs(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowSetStageInputs method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetStageInputs(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetStageInputs(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setStageInputs", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowSetVisibility method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetVisibility(String objectId, Class<T> outputClass) {
        return workflowSetVisibility(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowSetVisibility method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetVisibility(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowSetVisibility method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetVisibility(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowSetVisibility(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowSetVisibility method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowSetVisibility(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowSetVisibility method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetVisibility(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetVisibility(String objectId) {
        return workflowSetVisibility(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowSetVisibility method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetVisibility(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetVisibility(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowSetVisibility method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetVisibility(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetVisibility(String objectId, DXEnvironment env) {
        return workflowSetVisibility(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowSetVisibility method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowSetVisibility(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowSetVisibility(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "setVisibility", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowUpdate method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdate(String objectId, Class<T> outputClass) {
        return workflowUpdate(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowUpdate method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdate(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "update",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowUpdate method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdate(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowUpdate(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowUpdate method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdate(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "update",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowUpdate method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdate(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdate(String objectId) {
        return workflowUpdate(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowUpdate method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdate(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdate(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowUpdate method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdate(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdate(String objectId, DXEnvironment env) {
        return workflowUpdate(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowUpdate method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdate(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdate(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "update", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowUpdateStageExecutable method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdateStageExecutable(String objectId, Class<T> outputClass) {
        return workflowUpdateStageExecutable(objectId, mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowUpdateStageExecutable method with the given input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdateStageExecutable(String objectId, Object inputObject, Class<T> outputClass) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/" + objectId + "/" + "updateStageExecutable",
                        input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }
    /**
     * Invokes the workflowUpdateStageExecutable method with an empty input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdateStageExecutable(String objectId, Class<T> outputClass, DXEnvironment env) {
        return workflowUpdateStageExecutable(objectId, mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowUpdateStageExecutable method with the given input using the given environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Response object
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowUpdateStageExecutable(String objectId, Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = mapper.valueToTree(inputObject);
        return DXJSON.safeTreeToValue(
            new DXHTTPRequest(env).request("/" + objectId + "/" + "updateStageExecutable",
                    input, RetryStrategy.SAFE_TO_RETRY), outputClass);
    }

    /**
     * Invokes the workflowUpdateStageExecutable method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdateStageExecutable(String, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdateStageExecutable(String objectId) {
        return workflowUpdateStageExecutable(objectId, mapper.createObjectNode());
    }
    /**
     * Invokes the workflowUpdateStageExecutable method with the specified parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdateStageExecutable(String, Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdateStageExecutable(String objectId, JsonNode inputParams) {
        return new DXHTTPRequest().request("/" + objectId + "/" + "updateStageExecutable", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowUpdateStageExecutable method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdateStageExecutable(String, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdateStageExecutable(String objectId, DXEnvironment env) {
        return workflowUpdateStageExecutable(objectId, mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowUpdateStageExecutable method with the specified environment and parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable">API specification</a>.
     *
     * @param objectId ID of the object to operate on
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowUpdateStageExecutable(String, Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowUpdateStageExecutable(String objectId, JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/" + objectId + "/" + "updateStageExecutable", inputParams,
                RetryStrategy.SAFE_TO_RETRY);
    }

    /**
     * Invokes the workflowNew method with an empty input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowNew(Class<T> outputClass) {
        return workflowNew(mapper.createObjectNode(), outputClass);
    }
    /**
     * Invokes the workflowNew method with an empty input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowNew(Class<T> outputClass, DXEnvironment env) {
        return workflowNew(mapper.createObjectNode(), outputClass, env);
    }
    /**
     * Invokes the workflowNew method with the specified input, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowNew(Object inputObject, Class<T> outputClass) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest().request("/workflow/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }
    /**
     * Invokes the workflowNew method with the specified input using the specified environment, deserializing to an object of the specified class.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param inputObject input object (to be JSON serialized to an input hash)
     * @param outputClass class to deserialize the server reponse to
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     */
    public static <T> T workflowNew(Object inputObject, Class<T> outputClass, DXEnvironment env) {
        JsonNode input = Nonce.updateNonce(mapper.valueToTree(inputObject));
        return DXJSON.safeTreeToValue(
                new DXHTTPRequest(env).request("/workflow/new", input, RetryStrategy.SAFE_TO_RETRY),
                outputClass);
    }

    /**
     * Invokes the workflowNew method.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowNew(Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowNew() {
        return workflowNew(mapper.createObjectNode());
    }
    /**
     * Invokes the workflowNew method with the specified input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowNew(Object, Class)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowNew(JsonNode inputParams) {
        return new DXHTTPRequest().request("/workflow/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
    /**
     * Invokes the workflowNew method with the specified environment.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowNew(Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowNew(DXEnvironment env) {
        return workflowNew(mapper.createObjectNode(), env);
    }
    /**
     * Invokes the workflowNew method with the specified environment and input parameters.
     *
     * <p>For more information about this method, see the <a href="https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew">API specification</a>.
     *
     * @param inputParams input parameters to the API call
     * @param env environment object specifying the auth token and remote server and protocol
     *
     * @return Server response parsed from JSON
     *
     * @throws DXAPIException
     *             If the server returns a complete response with an HTTP status
     *             code other than 200 (OK).
     * @throws DXHTTPException
     *             If an error occurs while making the HTTP request or obtaining
     *             the response (includes HTTP protocol errors).
     *
     * @deprecated Use {@link #workflowNew(Object, Class, DXEnvironment)} instead and supply your own class to deserialize to.
     */
    @Deprecated
    public static JsonNode workflowNew(JsonNode inputParams, DXEnvironment env) {
        return new DXHTTPRequest(env).request("/workflow/new", inputParams, RetryStrategy.UNSAFE_TO_RETRY);
    }
}

