/** \file
 *
 * \brief Automatically generated API method wrappers
 *
 * This file is automatically generated from a list of available routes on the
 * API server. Functions in this file take a remote object ID (when
 * appropriate) and optional arguments input_params and safe_to_retry.
 * input_params specifies the request payload to send to the server, and can be
 * supplied either as stringified JSON or a JSON object (if not provided, the
 * JSON of an empty dict will be sent). safe_to_retry specifies whether the
 * request is idempotent and can be retried.
 *
 * Each function returns the JSON that is returned by the API server.
 */

// ===> Do not modify this file by hand! <===
//
// This file is automatically generated by
// src/api_wrappers/generateCppAPIHWrappers.py. (Run make api_wrappers to
// update it.)

#ifndef DXCPP_API_H
#define DXCPP_API_H

#include "dxjson/dxjson.h"

namespace dx {

  JSON analysisAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON analysisAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON analysisDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON analysisDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON analysisRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON analysisRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON analysisSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON analysisSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON analysisTerminate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON analysisTerminate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appAddAuthorizedUsers(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddAuthorizedUsers(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appAddAuthorizedUsersWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddAuthorizedUsersWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appAddCategories(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddCategories(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appAddCategoriesWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddCategoriesWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appAddDevelopers(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddDevelopers(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appAddDevelopersWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddDevelopersWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appAddTags(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddTags(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appAddTagsWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appAddTagsWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appDelete(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appDelete(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appDeleteWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appDeleteWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appDescribe(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appDescribe(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appDescribeWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appDescribeWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appGet(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appGet(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appGetWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appGetWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appInstall(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appInstall(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appInstallWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appInstallWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appListAuthorizedUsers(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appListAuthorizedUsers(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appListAuthorizedUsersWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appListAuthorizedUsersWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appListCategories(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appListCategories(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appListCategoriesWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appListCategoriesWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appListDevelopers(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appListDevelopers(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appListDevelopersWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appListDevelopersWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appPublish(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appPublish(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appPublishWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appPublishWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appRemoveAuthorizedUsers(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveAuthorizedUsers(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appRemoveAuthorizedUsersWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveAuthorizedUsersWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appRemoveCategories(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveCategories(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appRemoveCategoriesWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveCategoriesWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appRemoveDevelopers(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveDevelopers(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appRemoveDevelopersWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveDevelopersWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appRemoveTags(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveTags(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appRemoveTagsWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appRemoveTagsWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appRun(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON appRun(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=false);
  JSON appRunWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON appRunWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON appValidateBatch(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appValidateBatch(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appValidateBatchWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appValidateBatchWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appUninstall(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appUninstall(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appUninstallWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appUninstallWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appUpdate(const std::string &app_id_or_name, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appUpdate(const std::string &app_id_or_name, const dx::JSON &input_params, const bool safe_to_retry=true);
  JSON appUpdateWithAlias(const std::string &app_name, const std::string &app_alias, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appUpdateWithAlias(const std::string &app_name, const std::string &app_alias, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON appNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON appletAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletGet(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletGet(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletGetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletGetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletListProjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletListProjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletRename(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletRename(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletValidateBatch(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletValidateBatch(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletRun(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON appletRun(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON appletSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON appletSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON appletNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON appletNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON containerClone(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON containerClone(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON containerDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON containerDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON containerDestroy(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON containerDestroy(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON containerListFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON containerListFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON containerMove(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON containerMove(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON containerNewFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON containerNewFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON containerRemoveFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON containerRemoveFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON containerRemoveObjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON containerRemoveObjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON containerRenameFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON containerRenameFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON databaseAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseAddTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseAddTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseGetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseGetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseListProjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseListProjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseRelocate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON databaseRelocate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON databaseRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseRemoveTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseRemoveTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseRename(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseRename(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseSetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseSetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON databaseSetVisibility(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON databaseSetVisibility(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileAddTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileAddTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileClose(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileClose(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileDownload(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileDownload(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileGetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileGetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileListProjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileListProjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileRemoveTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileRemoveTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileRename(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileRename(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileSetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileSetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileSetVisibility(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileSetVisibility(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileUpload(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON fileUpload(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON fileNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON fileNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON globalWorkflowAddAuthorizedUsers(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowAddAuthorizedUsers(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowAddCategories(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowAddCategories(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowAddDevelopers(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowAddDevelopers(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowDelete(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowDelete(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowListAuthorizedUsers(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowListAuthorizedUsers(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowListCategories(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowListCategories(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowListDevelopers(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowListDevelopers(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowPublish(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowPublish(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowRemoveAuthorizedUsers(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowRemoveAuthorizedUsers(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowRemoveCategories(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowRemoveCategories(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowRemoveDevelopers(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowRemoveDevelopers(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowRun(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON globalWorkflowRun(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON globalWorkflowUpdate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON globalWorkflowUpdate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON globalWorkflowNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON globalWorkflowNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON gtableAddRows(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableAddRows(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableAddTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableAddTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableClose(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableClose(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableGet(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableGet(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableGetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableGetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableListProjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableListProjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableNextPart(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableNextPart(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableRemoveTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableRemoveTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableRename(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableRename(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableSetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableSetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableSetVisibility(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON gtableSetVisibility(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON gtableNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON gtableNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON jobAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON jobAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON jobDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON jobDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON jobGetLog(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON jobGetLog(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON jobRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON jobRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON jobSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON jobSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON jobTerminate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON jobTerminate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON jobNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON jobNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON notificationsGet(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON notificationsGet(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON notificationsMarkRead(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON notificationsMarkRead(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgFindMembers(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgFindMembers(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgFindProjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgFindProjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgFindApps(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgFindApps(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgInvite(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgInvite(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgRemoveMember(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgRemoveMember(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgSetMemberAccess(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgSetMemberAccess(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgUpdate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON orgUpdate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON orgNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON orgNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON projectAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectClone(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON projectClone(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON projectDecreasePermissions(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectDecreasePermissions(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectDestroy(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectDestroy(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectInvite(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON projectInvite(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON projectLeave(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectLeave(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectListFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectListFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectMove(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON projectMove(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON projectNewFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectNewFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectRemoveFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON projectRemoveFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON projectRemoveObjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON projectRemoveObjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON projectRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectRenameFolder(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON projectRenameFolder(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON projectSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectTransfer(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectTransfer(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectUpdate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectUpdate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectUpdateSponsorship(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON projectUpdateSponsorship(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON projectNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON projectNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON recordAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordAddTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordAddTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordClose(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordClose(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordGetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordGetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordListProjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordListProjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordRemoveTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordRemoveTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordRename(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordRename(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordSetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordSetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordSetVisibility(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON recordSetVisibility(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON recordNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON recordNew(const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON systemDescribeDataObjects(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemDescribeDataObjects(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemDescribeExecutions(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemDescribeExecutions(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemDescribeProjects(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemDescribeProjects(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindAffiliates(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindAffiliates(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindApps(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindApps(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindDataObjects(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindDataObjects(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindGlobalWorkflows(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindGlobalWorkflows(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemResolveDataObjects(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemResolveDataObjects(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindExecutions(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindExecutions(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindAnalyses(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindAnalyses(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindDatabases(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindDatabases(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindJobs(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindJobs(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindProjects(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindProjects(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindUsers(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindUsers(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindProjectMembers(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindProjectMembers(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemFindOrgs(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemFindOrgs(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemGenerateBatchInputs(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemGenerateBatchInputs(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemGlobalSearch(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemGlobalSearch(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemGreet(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemGreet(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemHeaders(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemHeaders(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemShortenURL(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemShortenURL(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON systemWhoami(const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON systemWhoami(const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON userDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON userDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON userUpdate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON userUpdate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON workflowAddStage(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowAddStage(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowAddTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowAddTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowAddTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowAddTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowClose(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowClose(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowDescribe(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowDescribe(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowDryRun(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowDryRun(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowGetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowGetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowIsStageCompatible(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowIsStageCompatible(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowListProjects(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowListProjects(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowMoveStage(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowMoveStage(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowOverwrite(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowOverwrite(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowRemoveStage(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowRemoveStage(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowRemoveTags(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowRemoveTags(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowRemoveTypes(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowRemoveTypes(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowRename(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowRename(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowRun(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON workflowRun(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=false);

  JSON workflowValidateBatch(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowValidateBatch(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowSetDetails(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowSetDetails(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowSetProperties(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowSetProperties(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowSetStageInputs(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowSetStageInputs(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowSetVisibility(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowSetVisibility(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowUpdate(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowUpdate(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowUpdateStageExecutable(const std::string &object_id, const std::string &input_params="{}", const bool safe_to_retry=true);
  JSON workflowUpdateStageExecutable(const std::string &object_id, const dx::JSON &input_params, const bool safe_to_retry=true);

  JSON workflowNew(const std::string &input_params="{}", const bool safe_to_retry=false);
  JSON workflowNew(const dx::JSON &input_params, const bool safe_to_retry=false);

}
#include "dxcpp.h"

#endif
