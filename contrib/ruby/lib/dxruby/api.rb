# Do not modify this file by hand.
#
# It is automatically generated by src/api_wrappers/generateRubyAPIWrappers.py.
# (Run make api_wrappers to update it.)

require 'dxruby'

module DX
  module API
    # Invokes the /analysis-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FaddTags
    def self.analysis_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /analysis-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fdescribe
    def self.analysis_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /analysis-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FremoveTags
    def self.analysis_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /analysis-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2FsetProperties
    def self.analysis_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /analysis-xxxx/terminate API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fanalysis-xxxx%2Fterminate
    def self.analysis_terminate(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/terminate", input_params, opts)
    end

    # Invokes the /app-xxxx/addAuthorizedUsers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addAuthorizedUsers
    def self.app_add_authorized_users(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/addAuthorizedUsers", input_params, opts)
    end

    # Invokes the /app-xxxx/addCategories API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addCategories
    def self.app_add_categories(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/addCategories", input_params, opts)
    end

    # Invokes the /app-xxxx/addDevelopers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addDevelopers
    def self.app_add_developers(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/addDevelopers", input_params, opts)
    end

    # Invokes the /app-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/addTags
    def self.app_add_tags(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/addTags", input_params, opts)
    end

    # Invokes the /app-xxxx/delete API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/delete
    def self.app_delete(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/delete", input_params, opts)
    end

    # Invokes the /app-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/describe
    def self.app_describe(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/describe", input_params, opts)
    end

    # Invokes the /app-xxxx/get API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/get
    def self.app_get(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/get", input_params, opts)
    end

    # Invokes the /app-xxxx/install API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/install
    def self.app_install(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/install", input_params, opts)
    end

    # Invokes the /app-xxxx/listAuthorizedUsers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listAuthorizedUsers
    def self.app_list_authorized_users(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/listAuthorizedUsers", input_params, opts)
    end

    # Invokes the /app-xxxx/listCategories API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listCategories
    def self.app_list_categories(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/listCategories", input_params, opts)
    end

    # Invokes the /app-xxxx/listDevelopers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/listDevelopers
    def self.app_list_developers(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/listDevelopers", input_params, opts)
    end

    # Invokes the /app-xxxx/publish API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/publish
    def self.app_publish(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/publish", input_params, opts)
    end

    # Invokes the /app-xxxx/removeAuthorizedUsers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeAuthorizedUsers
    def self.app_remove_authorized_users(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/removeAuthorizedUsers", input_params, opts)
    end

    # Invokes the /app-xxxx/removeCategories API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeCategories
    def self.app_remove_categories(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/removeCategories", input_params, opts)
    end

    # Invokes the /app-xxxx/removeDevelopers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeDevelopers
    def self.app_remove_developers(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/removeDevelopers", input_params, opts)
    end

    # Invokes the /app-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/removeTags
    def self.app_remove_tags(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/removeTags", input_params, opts)
    end

    # Invokes the /app-xxxx/run API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/run
    def self.app_run(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/run", input_params, opts)
    end

    # Invokes the /app-xxxx/validateBatch API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/validateBatch
    def self.app_validate_batch(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/validateBatch", input_params, opts)
    end

    # Invokes the /app-xxxx/uninstall API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/uninstall
    def self.app_uninstall(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/uninstall", input_params, opts)
    end

    # Invokes the /app-xxxx/update API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app-xxxx%5B/yyyy%5D/update
    def self.app_update(app_name_or_id, app_alias=nil, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      fully_qualified_version = app_name_or_id + (app_alias ? ('/' + app_alias) : '')
      return DX::http_request("/#{fully_qualified_version}/update", input_params, opts)
    end

    # Invokes the /app/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Apps#API-method:-/app/new
    def self.app_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/app/new", input_params, opts)
    end

    # Invokes the /applet-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags
    def self.applet_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /applet-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fdescribe
    def self.applet_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /applet-xxxx/get API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Fget
    def self.applet_get(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/get", input_params, opts)
    end

    # Invokes the /applet-xxxx/getDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails
    def self.applet_get_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/getDetails", input_params, opts)
    end

    # Invokes the /applet-xxxx/listProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects
    def self.applet_list_projects(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listProjects", input_params, opts)
    end

    # Invokes the /applet-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags
    def self.applet_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /applet-xxxx/rename API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename
    def self.applet_rename(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/rename", input_params, opts)
    end

    # Invokes the /applet-xxxx/validateBatch API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2FvalidateBatch
    def self.applet_validate_batch(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/validateBatch", input_params, opts)
    end

    # Invokes the /applet-xxxx/run API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet-xxxx%2Frun
    def self.applet_run(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/run", input_params, opts)
    end

    # Invokes the /applet-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties
    def self.applet_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /applet/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fapplet%2Fnew
    def self.applet_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/applet/new", input_params, opts)
    end

    # Invokes the /container-xxxx/clone API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone
    def self.container_clone(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/clone", input_params, opts)
    end

    # Invokes the /container-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Containers-for-Execution#API-method%3A-%2Fcontainer-xxxx%2Fdescribe
    def self.container_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /container-xxxx/destroy API method.
    def self.container_destroy(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/destroy", input_params, opts)
    end

    # Invokes the /container-xxxx/listFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder
    def self.container_list_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listFolder", input_params, opts)
    end

    # Invokes the /container-xxxx/move API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove
    def self.container_move(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/move", input_params, opts)
    end

    # Invokes the /container-xxxx/newFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder
    def self.container_new_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/newFolder", input_params, opts)
    end

    # Invokes the /container-xxxx/removeFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder
    def self.container_remove_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/removeFolder", input_params, opts)
    end

    # Invokes the /container-xxxx/removeObjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects
    def self.container_remove_objects(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/removeObjects", input_params, opts)
    end

    # Invokes the /container-xxxx/renameFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder
    def self.container_rename_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/renameFolder", input_params, opts)
    end

    # Invokes the /database-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags
    def self.database_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /database-xxxx/addTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes
    def self.database_add_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTypes", input_params, opts)
    end

    # Invokes the /database-xxxx/describe API method.
    def self.database_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /database-xxxx/getDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails
    def self.database_get_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/getDetails", input_params, opts)
    end

    # Invokes the /database-xxxx/listProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects
    def self.database_list_projects(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listProjects", input_params, opts)
    end

    # Invokes the /database-xxxx/relocate API method.
    def self.database_relocate(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/relocate", input_params, opts)
    end

    # Invokes the /database-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags
    def self.database_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /database-xxxx/removeTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes
    def self.database_remove_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTypes", input_params, opts)
    end

    # Invokes the /database-xxxx/rename API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename
    def self.database_rename(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/rename", input_params, opts)
    end

    # Invokes the /database-xxxx/setDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails
    def self.database_set_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setDetails", input_params, opts)
    end

    # Invokes the /database-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties
    def self.database_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /database-xxxx/setVisibility API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility
    def self.database_set_visibility(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setVisibility", input_params, opts)
    end

    # Invokes the /file-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags
    def self.file_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /file-xxxx/addTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes
    def self.file_add_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTypes", input_params, opts)
    end

    # Invokes the /file-xxxx/close API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fclose
    def self.file_close(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/close", input_params, opts)
    end

    # Invokes the /file-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdescribe
    def self.file_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /file-xxxx/download API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fdownload
    def self.file_download(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/download", input_params, opts)
    end

    # Invokes the /file-xxxx/getDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails
    def self.file_get_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/getDetails", input_params, opts)
    end

    # Invokes the /file-xxxx/listProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects
    def self.file_list_projects(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listProjects", input_params, opts)
    end

    # Invokes the /file-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags
    def self.file_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /file-xxxx/removeTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes
    def self.file_remove_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTypes", input_params, opts)
    end

    # Invokes the /file-xxxx/rename API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename
    def self.file_rename(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/rename", input_params, opts)
    end

    # Invokes the /file-xxxx/setDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails
    def self.file_set_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setDetails", input_params, opts)
    end

    # Invokes the /file-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties
    def self.file_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /file-xxxx/setVisibility API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility
    def self.file_set_visibility(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setVisibility", input_params, opts)
    end

    # Invokes the /file-xxxx/upload API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile-xxxx%2Fupload
    def self.file_upload(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/upload", input_params, opts)
    end

    # Invokes the /file/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Files#API-method%3A-%2Ffile%2Fnew
    def self.file_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/file/new", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/addAuthorizedUsers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addAuthorizedUsers
    def self.global_workflow_add_authorized_users(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addAuthorizedUsers", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/addCategories API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addCategories
    def self.global_workflow_add_categories(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addCategories", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/addDevelopers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addDevelopers
    def self.global_workflow_add_developers(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addDevelopers", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/addTags
    def self.global_workflow_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/delete API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/delete
    def self.global_workflow_delete(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/delete", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/describe
    def self.global_workflow_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/listAuthorizedUsers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listAuthorizedUsers
    def self.global_workflow_list_authorized_users(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listAuthorizedUsers", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/listCategories API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listCategories
    def self.global_workflow_list_categories(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listCategories", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/listDevelopers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/listDevelopers
    def self.global_workflow_list_developers(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listDevelopers", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/publish API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/publish
    def self.global_workflow_publish(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/publish", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/removeAuthorizedUsers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeAuthorizedUsers
    def self.global_workflow_remove_authorized_users(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeAuthorizedUsers", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/removeCategories API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeCategories
    def self.global_workflow_remove_categories(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeCategories", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/removeDevelopers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeDevelopers
    def self.global_workflow_remove_developers(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeDevelopers", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/removeTags
    def self.global_workflow_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/run API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/run
    def self.global_workflow_run(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/run", input_params, opts)
    end

    # Invokes the /globalworkflow-xxxx/update API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow-xxxx%5B/yyyy%5D/update
    def self.global_workflow_update(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/update", input_params, opts)
    end

    # Invokes the /globalworkflow/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Global-Workflows#API-method:-/globalworkflow/new
    def self.global_workflow_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/globalworkflow/new", input_params, opts)
    end

    # Invokes the /gtable-xxxx/addRows API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FaddRows
    def self.gtable_add_rows(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addRows", input_params, opts)
    end

    # Invokes the /gtable-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags
    def self.gtable_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /gtable-xxxx/addTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes
    def self.gtable_add_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTypes", input_params, opts)
    end

    # Invokes the /gtable-xxxx/close API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fclose
    def self.gtable_close(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/close", input_params, opts)
    end

    # Invokes the /gtable-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fdescribe
    def self.gtable_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /gtable-xxxx/get API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2Fget
    def self.gtable_get(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/get", input_params, opts)
    end

    # Invokes the /gtable-xxxx/getDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails
    def self.gtable_get_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/getDetails", input_params, opts)
    end

    # Invokes the /gtable-xxxx/listProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects
    def self.gtable_list_projects(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listProjects", input_params, opts)
    end

    # Invokes the /gtable-xxxx/nextPart API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable-xxxx%2FnextPart
    def self.gtable_next_part(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/nextPart", input_params, opts)
    end

    # Invokes the /gtable-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags
    def self.gtable_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /gtable-xxxx/removeTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes
    def self.gtable_remove_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTypes", input_params, opts)
    end

    # Invokes the /gtable-xxxx/rename API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename
    def self.gtable_rename(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/rename", input_params, opts)
    end

    # Invokes the /gtable-xxxx/setDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails
    def self.gtable_set_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setDetails", input_params, opts)
    end

    # Invokes the /gtable-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties
    def self.gtable_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /gtable-xxxx/setVisibility API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility
    def self.gtable_set_visibility(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setVisibility", input_params, opts)
    end

    # Invokes the /gtable/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/GenomicTables#API-method%3A-%2Fgtable%2Fnew
    def self.gtable_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/gtable/new", input_params, opts)
    end

    # Invokes the /job-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FaddTags
    def self.job_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /job-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fdescribe
    def self.job_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /job-xxxx/getLog API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FgetLog
    def self.job_get_log(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/getLog", input_params, opts)
    end

    # Invokes the /job-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FremoveTags
    def self.job_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /job-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2FsetProperties
    def self.job_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /job-xxxx/terminate API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob-xxxx%2Fterminate
    def self.job_terminate(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/terminate", input_params, opts)
    end

    # Invokes the /job/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Applets-and-Entry-Points#API-method%3A-%2Fjob%2Fnew
    def self.job_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/job/new", input_params, opts)
    end

    # Invokes the /notifications/get API method.
    def self.notifications_get(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/notifications/get", input_params, opts)
    end

    # Invokes the /notifications/markRead API method.
    def self.notifications_mark_read(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/notifications/markRead", input_params, opts)
    end

    # Invokes the /org-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fdescribe
    def self.org_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /org-xxxx/findMembers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindMembers
    def self.org_find_members(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/findMembers", input_params, opts)
    end

    # Invokes the /org-xxxx/findProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindProjects
    def self.org_find_projects(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/findProjects", input_params, opts)
    end

    # Invokes the /org-xxxx/findApps API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FfindApps
    def self.org_find_apps(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/findApps", input_params, opts)
    end

    # Invokes the /org-xxxx/invite API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Finvite
    def self.org_invite(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/invite", input_params, opts)
    end

    # Invokes the /org-xxxx/removeMember API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FremoveMember
    def self.org_remove_member(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeMember", input_params, opts)
    end

    # Invokes the /org-xxxx/setMemberAccess API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2FsetMemberAccess
    def self.org_set_member_access(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setMemberAccess", input_params, opts)
    end

    # Invokes the /org-xxxx/update API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg-xxxx%2Fupdate
    def self.org_update(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/update", input_params, opts)
    end

    # Invokes the /org/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Organizations#API-method%3A-%2Forg%2Fnew
    def self.org_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/org/new", input_params, opts)
    end

    # Invokes the /project-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FaddTags
    def self.project_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /project-xxxx/clone API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2Fclone
    def self.project_clone(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/clone", input_params, opts)
    end

    # Invokes the /project-xxxx/decreasePermissions API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2FdecreasePermissions
    def self.project_decrease_permissions(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/decreasePermissions", input_params, opts)
    end

    # Invokes the /project-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdescribe
    def self.project_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /project-xxxx/destroy API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fdestroy
    def self.project_destroy(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/destroy", input_params, opts)
    end

    # Invokes the /project-xxxx/invite API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Finvite
    def self.project_invite(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/invite", input_params, opts)
    end

    # Invokes the /project-xxxx/leave API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Fleave
    def self.project_leave(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/leave", input_params, opts)
    end

    # Invokes the /project-xxxx/listFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FlistFolder
    def self.project_list_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listFolder", input_params, opts)
    end

    # Invokes the /project-xxxx/move API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2Fmove
    def self.project_move(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/move", input_params, opts)
    end

    # Invokes the /project-xxxx/newFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FnewFolder
    def self.project_new_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/newFolder", input_params, opts)
    end

    # Invokes the /project-xxxx/removeFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveFolder
    def self.project_remove_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/removeFolder", input_params, opts)
    end

    # Invokes the /project-xxxx/removeObjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FremoveObjects
    def self.project_remove_objects(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/removeObjects", input_params, opts)
    end

    # Invokes the /project-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FremoveTags
    def self.project_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /project-xxxx/renameFolder API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Folders-and-Deletion#API-method%3A-%2Fclass-xxxx%2FrenameFolder
    def self.project_rename_folder(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/renameFolder", input_params, opts)
    end

    # Invokes the /project-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FsetProperties
    def self.project_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /project-xxxx/transfer API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Project-Permissions-and-Sharing#API-method%3A-%2Fproject-xxxx%2Ftransfer
    def self.project_transfer(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/transfer", input_params, opts)
    end

    # Invokes the /project-xxxx/update API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2Fupdate
    def self.project_update(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/update", input_params, opts)
    end

    # Invokes the /project-xxxx/updateSponsorship API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject-xxxx%2FupdateSponsorship
    def self.project_update_sponsorship(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/updateSponsorship", input_params, opts)
    end

    # Invokes the /project/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Projects#API-method%3A-%2Fproject%2Fnew
    def self.project_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/project/new", input_params, opts)
    end

    # Invokes the /record-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags
    def self.record_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /record-xxxx/addTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes
    def self.record_add_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTypes", input_params, opts)
    end

    # Invokes the /record-xxxx/close API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose
    def self.record_close(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/close", input_params, opts)
    end

    # Invokes the /record-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord-xxxx%2Fdescribe
    def self.record_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /record-xxxx/getDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails
    def self.record_get_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/getDetails", input_params, opts)
    end

    # Invokes the /record-xxxx/listProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects
    def self.record_list_projects(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listProjects", input_params, opts)
    end

    # Invokes the /record-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags
    def self.record_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /record-xxxx/removeTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes
    def self.record_remove_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTypes", input_params, opts)
    end

    # Invokes the /record-xxxx/rename API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename
    def self.record_rename(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/rename", input_params, opts)
    end

    # Invokes the /record-xxxx/setDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails
    def self.record_set_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setDetails", input_params, opts)
    end

    # Invokes the /record-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties
    def self.record_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /record-xxxx/setVisibility API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility
    def self.record_set_visibility(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setVisibility", input_params, opts)
    end

    # Invokes the /record/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Records#API-method%3A-%2Frecord%2Fnew
    def self.record_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/record/new", input_params, opts)
    end

    # Invokes the /system/describeDataObjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeDataObjects
    def self.system_describe_data_objects(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/describeDataObjects", input_params, opts)
    end

    # Invokes the /system/describeExecutions API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeExecutions
    def self.system_describe_executions(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/describeExecutions", input_params, opts)
    end

    # Invokes the /system/describeProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/describeProjects
    def self.system_describe_projects(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/describeProjects", input_params, opts)
    end

    # Invokes the /system/findAffiliates API method.
    def self.system_find_affiliates(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findAffiliates", input_params, opts)
    end

    # Invokes the /system/findApps API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindApps
    def self.system_find_apps(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findApps", input_params, opts)
    end

    # Invokes the /system/findDataObjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindDataObjects
    def self.system_find_data_objects(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findDataObjects", input_params, opts)
    end

    # Invokes the /system/findGlobalWorkflows API method.
    def self.system_find_global_workflows(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findGlobalWorkflows", input_params, opts)
    end

    # Invokes the /system/resolveDataObjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/System-Methods#API-method:-/system/resolveDataObjects
    def self.system_resolve_data_objects(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/resolveDataObjects", input_params, opts)
    end

    # Invokes the /system/findExecutions API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindExecutions
    def self.system_find_executions(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findExecutions", input_params, opts)
    end

    # Invokes the /system/findAnalyses API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindAnalyses
    def self.system_find_analyses(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findAnalyses", input_params, opts)
    end

    # Invokes the /system/findDatabases API method.
    def self.system_find_databases(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findDatabases", input_params, opts)
    end

    # Invokes the /system/findJobs API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindJobs
    def self.system_find_jobs(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findJobs", input_params, opts)
    end

    # Invokes the /system/findProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindProjects
    def self.system_find_projects(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findProjects", input_params, opts)
    end

    # Invokes the /system/findUsers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method%3A-%2Fsystem%2FfindUsers
    def self.system_find_users(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findUsers", input_params, opts)
    end

    # Invokes the /system/findProjectMembers API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findProjectMembers
    def self.system_find_project_members(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findProjectMembers", input_params, opts)
    end

    # Invokes the /system/findOrgs API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/findOrgs
    def self.system_find_orgs(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/findOrgs", input_params, opts)
    end

    # Invokes the /system/generateBatchInputs API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/generateBatchInputs
    def self.system_generate_batch_inputs(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/generateBatchInputs", input_params, opts)
    end

    # Invokes the /system/globalSearch API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Search#API-method:-/system/globalSearch
    def self.system_global_search(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/globalSearch", input_params, opts)
    end

    # Invokes the /system/greet API method.
    def self.system_greet(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/greet", input_params, opts)
    end

    # Invokes the /system/headers API method.
    def self.system_headers(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/headers", input_params, opts)
    end

    # Invokes the /system/shortenURL API method.
    def self.system_shorten_url(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/shortenURL", input_params, opts)
    end

    # Invokes the /system/whoami API method.
    def self.system_whoami(input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/system/whoami", input_params, opts)
    end

    # Invokes the /user-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fdescribe
    def self.user_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /user-xxxx/update API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Users#API-method%3A-%2Fuser-xxxx%2Fupdate
    def self.user_update(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/update", input_params, opts)
    end

    # Invokes the /workflow-xxxx/addStage API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FaddStage
    def self.workflow_add_stage(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addStage", input_params, opts)
    end

    # Invokes the /workflow-xxxx/addTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FaddTags
    def self.workflow_add_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTags", input_params, opts)
    end

    # Invokes the /workflow-xxxx/addTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FaddTypes
    def self.workflow_add_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/addTypes", input_params, opts)
    end

    # Invokes the /workflow-xxxx/close API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Data-Object-Lifecycle#API-method%3A-%2Fclass-xxxx%2Fclose
    def self.workflow_close(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/close", input_params, opts)
    end

    # Invokes the /workflow-xxxx/describe API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fdescribe
    def self.workflow_describe(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/describe", input_params, opts)
    end

    # Invokes the /workflow-xxxx/dryRun API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FdryRun
    def self.workflow_dry_run(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/dryRun", input_params, opts)
    end

    # Invokes the /workflow-xxxx/getDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FgetDetails
    def self.workflow_get_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/getDetails", input_params, opts)
    end

    # Invokes the /workflow-xxxx/isStageCompatible API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FisStageCompatible
    def self.workflow_is_stage_compatible(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/isStageCompatible", input_params, opts)
    end

    # Invokes the /workflow-xxxx/listProjects API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Cloning#API-method%3A-%2Fclass-xxxx%2FlistProjects
    def self.workflow_list_projects(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/listProjects", input_params, opts)
    end

    # Invokes the /workflow-xxxx/moveStage API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FmoveStage
    def self.workflow_move_stage(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/moveStage", input_params, opts)
    end

    # Invokes the /workflow-xxxx/overwrite API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Foverwrite
    def self.workflow_overwrite(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/overwrite", input_params, opts)
    end

    # Invokes the /workflow-xxxx/removeStage API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FremoveStage
    def self.workflow_remove_stage(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeStage", input_params, opts)
    end

    # Invokes the /workflow-xxxx/removeTags API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Tags#API-method%3A-%2Fclass-xxxx%2FremoveTags
    def self.workflow_remove_tags(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTags", input_params, opts)
    end

    # Invokes the /workflow-xxxx/removeTypes API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Types#API-method%3A-%2Fclass-xxxx%2FremoveTypes
    def self.workflow_remove_types(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/removeTypes", input_params, opts)
    end

    # Invokes the /workflow-xxxx/rename API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Name#API-method%3A-%2Fclass-xxxx%2Frename
    def self.workflow_rename(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/rename", input_params, opts)
    end

    # Invokes the /workflow-xxxx/run API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Frun
    def self.workflow_run(object_id, input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/#{object_id}/run", input_params, opts)
    end

    # Invokes the /workflow-xxxx/validateBatch API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FvalidateBatch
    def self.workflow_validate_batch(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/validateBatch", input_params, opts)
    end

    # Invokes the /workflow-xxxx/setDetails API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Details-and-Links#API-method%3A-%2Fclass-xxxx%2FsetDetails
    def self.workflow_set_details(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setDetails", input_params, opts)
    end

    # Invokes the /workflow-xxxx/setProperties API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Properties#API-method%3A-%2Fclass-xxxx%2FsetProperties
    def self.workflow_set_properties(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setProperties", input_params, opts)
    end

    # Invokes the /workflow-xxxx/setStageInputs API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FsetStageInputs
    def self.workflow_set_stage_inputs(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setStageInputs", input_params, opts)
    end

    # Invokes the /workflow-xxxx/setVisibility API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Visibility#API-method%3A-%2Fclass-xxxx%2FsetVisibility
    def self.workflow_set_visibility(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/setVisibility", input_params, opts)
    end

    # Invokes the /workflow-xxxx/update API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2Fupdate
    def self.workflow_update(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/update", input_params, opts)
    end

    # Invokes the /workflow-xxxx/updateStageExecutable API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow-xxxx%2FupdateStageExecutable
    def self.workflow_update_stage_executable(object_id, input_params={}, opts={})
      opts = { "always_retry" => true }.merge(opts)
      return DX::http_request("/#{object_id}/updateStageExecutable", input_params, opts)
    end

    # Invokes the /workflow/new API method.
    #
    # For more info, see: https://wiki.dnanexus.com/API-Specification-v1.0.0/Workflows-and-Analyses#API-method%3A-%2Fworkflow%2Fnew
    def self.workflow_new(input_params={}, opts={})
      opts = { "always_retry" => false }.merge(opts)
      return DX::http_request("/workflow/new", input_params, opts)
    end

  end
end
